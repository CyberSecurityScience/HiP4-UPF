{
	"tables":	[{
			"name":	"tf1.pktgen.port_cfg",
			"id":	4278386689,
			"table_type":	"PktgenPortCfg",
			"size":	256,
			"key":	[{
					"id":	1,
					"name":	"dev_port",
					"repeated":	false,
					"annotations":	[{
							"name":	"$bfrt_port_type_class",
							"value":	"dev_port"
						}],
					"mandatory":	false,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"recirculation_enable",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"pktgen_enable",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"pattern_matching_enable",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	4,
						"name":	"clear_port_down_enable",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryMod":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"Updates an entry identified by the key fields with values from the corresponding data fields."
				},
				"tableEntryGet":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"Retrieves an existing Pktgen object specified in the key fields and populates all the corresponding data fields."
				},
				"tableClear":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"This API is used to reset writable datafields to default values."
				}
			}
		}, {
			"name":	"tf1.pktgen.app_cfg",
			"id":	4278386690,
			"table_type":	"PktgenAppCfg",
			"size":	8,
			"key":	[{
					"id":	1,
					"name":	"app_id",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	false,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}],
			"action_specs":	[{
					"id":	1,
					"name":	"trigger_timer_one_shot",
					"data":	[{
							"id":	1,
							"name":	"timer_nanosec",
							"repeated":	false,
							"mandatory":	false,
							"annotations":	[],
							"type":	{
								"type":	"uint32"
							}
						}]
				}, {
					"id":	2,
					"name":	"trigger_timer_periodic",
					"data":	[{
							"id":	1,
							"name":	"timer_nanosec",
							"repeated":	false,
							"mandatory":	false,
							"annotations":	[],
							"type":	{
								"type":	"uint32"
							}
						}]
				}, {
					"id":	3,
					"name":	"trigger_port_down",
					"data":	[]
				}, {
					"id":	4,
					"name":	"trigger_recirc_pattern",
					"data":	[{
							"id":	4,
							"name":	"pattern_value",
							"repeated":	false,
							"mandatory":	false,
							"annotations":	[],
							"type":	{
								"type":	"uint32"
							}
						}, {
							"id":	5,
							"name":	"pattern_mask",
							"repeated":	false,
							"mandatory":	false,
							"annotations":	[],
							"type":	{
								"type":	"uint32"
							}
						}]
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	12,
						"name":	"app_enable",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	13,
						"name":	"pkt_len",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint16"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	14,
						"name":	"pkt_buffer_offset",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint16"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	15,
						"name":	"pipe_local_source_port",
						"repeated":	false,
						"annotations":	[{
								"name":	"$bfrt_port_type_class",
								"value":	"dev_port"
							}],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	16,
						"name":	"increment_source_port",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	17,
						"name":	"batch_count_cfg",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint16"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	18,
						"name":	"packets_per_batch_cfg",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint16"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	19,
						"name":	"ibg",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	20,
						"name":	"ibg_jitter",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	21,
						"name":	"ipg",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	22,
						"name":	"ipg_jitter",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	23,
						"name":	"batch_counter",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	24,
						"name":	"pkt_counter",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	25,
						"name":	"trigger_counter",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryMod":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"Updates an entry associated with an App ID."
				},
				"tableEntryGet":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"Retrieves an existing Pktgen object specified in the key fields and populates all the corresponding data fields."
				},
				"tableEntryGetFirst":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"This API retrieves first valid Pktgen object in the table."
				},
				"tableEntryGetNext_n":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"This API retrieves n valid Pktgen objects from the table."
				},
				"tableUsageGet":	{
					"target_attributes":	[],
					"description":	"This API returns table size as this is fixed table."
				},
				"tableClear":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"This API is used to reset writable datafields to default values."
				}
			}
		}, {
			"name":	"tf1.pktgen.pkt_buffer",
			"id":	4278386691,
			"table_type":	"PktgenPktBufferCfg",
			"size":	1024,
			"key":	[{
					"id":	1,
					"name":	"pkt_buffer_offset",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	false,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}, {
					"id":	2,
					"name":	"pkt_buffer_size",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	false,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"buffer",
						"repeated":	true,
						"annotations":	[],
						"type":	{
							"type":	"bytes",
							"width":	8
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryMod":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"Updates an entry identified by the key fields with values from the corresponding data fields."
				},
				"tableEntryGet":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"Retrieves an existing Pktgen object specified in the key fields and populates all the corresponding data fields."
				},
				"tableClear":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"This API is used to reset writable datafields to default values."
				}
			}
		}, {
			"name":	"tf1.tm.port.dpg",
			"description":	"TM Port Default Priority Group (DPG) iCoS and buffer settings.",
			"id":	4278517781,
			"table_type":	"TmPortDpg",
			"size":	288,
			"key":	[{
					"id":	1,
					"name":	"dev_port",
					"description":	"The device port ID (a 9-bit value) to refer to a port on a Tofino based system; it is used for the Tofino fixed-function API calls and in P4 programming.",
					"repeated":	false,
					"annotations":	[{
							"name":	"$bfrt_port_type_class",
							"value":	"dev_port"
						}],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	1,
						"name":	"icos_ppg_map",
						"description":	"Map of PPGs (non-default PG) allocated for this Port and assigned to iCoS. Index is iCoS, item is ppg_id key. Zero item value means the DPG handles that iCoS without PPG assigned. Only these PPGs which are mapped to iCoS are listed here.",
						"repeated":	true,
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	2,
						"name":	"icos_0",
						"description":	"iCoS=0 assignment to default PG on this port.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	3,
						"name":	"icos_1",
						"description":	"iCoS=1 assignment to default PG on this port.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	4,
						"name":	"icos_2",
						"description":	"iCoS=2 assignment to default PG on this port.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	5,
						"name":	"icos_3",
						"description":	"iCoS=3 assignment to default PG on this port.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	6,
						"name":	"icos_4",
						"description":	"iCoS=4 assignment to default PG on this port.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	7,
						"name":	"icos_5",
						"description":	"iCoS=5 assignment to default PG on this port.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	8,
						"name":	"icos_6",
						"description":	"iCoS=6 assignment to default PG on this port.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	9,
						"name":	"icos_7",
						"description":	"iCoS=7 assignment to default PG on this port.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	10,
						"name":	"guaranteed_cells",
						"description":	"The guaranteed minimum buffer size allocated to the Port default priority group (DPG). Buffer size is in terms of number of cells.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	11,
						"name":	"hysteresis_cells",
						"description":	"Hysteresis limit in number of cells the DPG usage should fall from its limit value before drop condition is cleared.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	12,
						"name":	"pool_id",
						"description":	"Optional Ingress Application pool for this DPG. Active if pool_max_cells is not zero.",
						"repeated":	false,
						"type":	{
							"type":	"string",
							"choices":	["IG_APP_POOL_0", "IG_APP_POOL_1", "IG_APP_POOL_2", "IG_APP_POOL_3"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	13,
						"name":	"pool_max_cells",
						"description":	"Limit, in terms of cells, to which the DPG buffer can grow inside the application pool. Limit is specified in number of cells. Once this limit is crossed, and if the DPG's burst absorption factor (BAF) is non zero then, depending on availability of buffers the DPG is allowed to use up to BAF limit of the buffer memory currently available. The DPG does not use shared pool if the pool_max_cells is set to zero.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	14,
						"name":	"dynamic_baf",
						"description":	"Dynamic Burst Absorption Factor value ID assigned for ths DPG. Used to decide how much of the available buffer memory can be used by the DPG. If BAF limit is NONE, the DPG is treated as static and no dynamic buffering is possible over the pool_max_cells.",
						"repeated":	false,
						"type":	{
							"type":	"string",
							"choices":	["1.5%", "3%", "6%", "11%", "20%", "33%", "50%", "66%", "80%", "DISABLE"]
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryGet":	{
					"target_attributes":	["dev_id"],
					"description":	"Retrieves an existing DPG specified in the key and populates the corresponding data fields."
				},
				"tableEntryMod":	{
					"target_attributes":	["dev_id"],
					"description":	"Updates an existing DPG identified by the key with values from the corresponding data fields."
				},
				"tableEntryGetFirst":	{
					"target_attributes":	["dev_id"],
					"description":	"Fetches data fields of the very first DPG."
				},
				"tableEntryGetNext_n":	{
					"target_attributes":	["dev_id"],
					"description":	"Fetches data fields of the next n entries in the table after the entry, identified by the key."
				},
				"tableUsageGet":	{
					"target_attributes":	["dev_id"],
					"description":	"Returns the table size constant value."
				},
				"tableClear":	{
					"target_attributes":	["dev_id"],
					"description":	"Resets to HW default settings except r/o iCoS settings (use tm.ppg.cfg to change)."
				}
			}
		}, {
			"name":	"tf1.tm.mirror.dpg",
			"description":	"TM Mirror Port Default Priority Group (DPG) iCoS and buffer settings.",
			"id":	4278517873,
			"table_type":	"TmMirrorDpg",
			"size":	4,
			"key":	[],
			"data":	[{
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	1,
						"name":	"icos_ppg_map",
						"description":	"Map of PPGs (non-default PG) allocated for this Port and assigned to iCoS. Index is iCoS, item is ppg_id key. Zero item value means the DPG handles that iCoS without PPG assigned. Only these PPGs which are mapped to iCoS are listed here.",
						"repeated":	true,
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	2,
						"name":	"icos_0",
						"description":	"iCoS=0 assignment to default PG on this port.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	3,
						"name":	"icos_1",
						"description":	"iCoS=1 assignment to default PG on this port.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	4,
						"name":	"icos_2",
						"description":	"iCoS=2 assignment to default PG on this port.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	5,
						"name":	"icos_3",
						"description":	"iCoS=3 assignment to default PG on this port.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	6,
						"name":	"icos_4",
						"description":	"iCoS=4 assignment to default PG on this port.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	7,
						"name":	"icos_5",
						"description":	"iCoS=5 assignment to default PG on this port.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	8,
						"name":	"icos_6",
						"description":	"iCoS=6 assignment to default PG on this port.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	9,
						"name":	"icos_7",
						"description":	"iCoS=7 assignment to default PG on this port.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	10,
						"name":	"guaranteed_cells",
						"description":	"The guaranteed minimum buffer size allocated to the Port default priority group (DPG). Buffer size is in terms of number of cells.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	11,
						"name":	"hysteresis_cells",
						"description":	"Hysteresis limit in number of cells the DPG usage should fall from its limit value before drop condition is cleared.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	12,
						"name":	"pool_id",
						"description":	"Optional Ingress Application pool for this DPG. Active if pool_max_cells is not zero.",
						"repeated":	false,
						"type":	{
							"type":	"string",
							"choices":	["IG_APP_POOL_0", "IG_APP_POOL_1", "IG_APP_POOL_2", "IG_APP_POOL_3"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	13,
						"name":	"pool_max_cells",
						"description":	"Limit, in terms of cells, to which the DPG buffer can grow inside the application pool. Limit is specified in number of cells. Once this limit is crossed, and if the DPG's burst absorption factor (BAF) is non zero then, depending on availability of buffers the DPG is allowed to use up to BAF limit of the buffer memory currently available. The DPG does not use shared pool if the pool_max_cells is set to zero.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	14,
						"name":	"dynamic_baf",
						"description":	"Dynamic Burst Absorption Factor value ID assigned for ths DPG. Used to decide how much of the available buffer memory can be used by the DPG. If BAF limit is NONE, the DPG is treated as static and no dynamic buffering is possible over the pool_max_cells.",
						"repeated":	false,
						"type":	{
							"type":	"string",
							"choices":	["1.5%", "3%", "6%", "11%", "20%", "33%", "50%", "66%", "80%", "DISABLE"]
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableDefaultEntryGet":	{
					"description":	"Retrieves the Mirror Port DPG identified by the dev_tgt.pipe_id with values in the corresponding data fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableDefaultEntrySet":	{
					"description":	"Updates the Mirror Port DPG identified by the dev_tgt.pipe_id with values from the corresponding data fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableDefaultEntryReset":	{
					"description":	"Updates the Mirror Port DPG identified by the dev_tgt.pipe_id with HW reset values except r/o iCoS settings (use tm.ppg.cfg to change).",
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				},
				"tableClear":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"Applies tableDefaultEntryReset to the dev_tgt.pipe_id or to all pipes with PIPE_ALL."
				}
			}
		}, {
			"name":	"tf1.tm.ppg.cfg",
			"description":	"TM Port Priority Group (PPG) settings.",
			"id":	4278517808,
			"table_type":	"TmPpgCfg",
			"size":	512,
			"key":	[{
					"id":	1,
					"name":	"ppg_id",
					"description":	"The PPG unique id (1..255). Zero value means NULL id. The value is chosen by the application when it adds a new entry. The PPG object is allocated from the Pipe resources (up to 128 items per pipe).",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint8"
					}
				}],
			"action_specs":	[{
					"id":	1,
					"name":	"dev_port",
					"data":	[{
							"mandatory":	false,
							"read_only":	false,
							"singleton":	{
								"id":	1,
								"name":	"dev_port",
								"description":	"The device port on the same dev_tgt.pipe_id which currently uses this PPG. The value must be provided to add an entry. With entry modify it is optional for consistency check to be equal with what is set on the PPG initially.",
								"repeated":	false,
								"type":	{
									"type":	"uint32"
								}
							}
						}, {
							"mandatory":	false,
							"read_only":	false,
							"singleton":	{
								"id":	2,
								"name":	"pfc_enable",
								"description":	"Enable or disable PFC treatment for this PPG. ",
								"repeated":	false,
								"type":	{
									"type":	"bool"
								}
							}
						}, {
							"mandatory":	false,
							"read_only":	false,
							"singleton":	{
								"id":	3,
								"name":	"pfc_skid_max_cells",
								"description":	"Skid pool (PFC Head room) limit in number of buffer cells available for this PPG in lossless (PFC) mode.",
								"repeated":	false,
								"type":	{
									"type":	"uint32"
								}
							}
						}]
				}, {
					"id":	2,
					"name":	"mirror_port",
					"data":	[]
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	4,
						"name":	"icos_0",
						"description":	"iCoS=0 assignment to this PPG on this port and released from its DPG",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	5,
						"name":	"icos_1",
						"description":	"iCoS=1 assignment to this PPG on this port and released from its DPG",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	6,
						"name":	"icos_2",
						"description":	"iCoS=2 assignment to this PPG on this port and released from its DPG",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	7,
						"name":	"icos_3",
						"description":	"iCoS=3 assignment to this PPG on this port and released from its DPG",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	8,
						"name":	"icos_4",
						"description":	"iCoS=4 assignment to this PPG on this port and released from its DPG",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	9,
						"name":	"icos_5",
						"description":	"iCoS=5 assignment to this PPG on this port and released from its DPG",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	10,
						"name":	"icos_6",
						"description":	"iCoS=6 assignment to this PPG on this port and released from its DPG",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	11,
						"name":	"icos_7",
						"description":	"iCoS=7 assignment to this PPG on this port and released from its DPG",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	12,
						"name":	"guaranteed_cells",
						"description":	"The guaranteed minimum buffer size allocated to this PPG. Buffer size is in terms of number of cells.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	13,
						"name":	"hysteresis_cells",
						"description":	"Hysteresis limit in number of cells the PPG usage should fall from its limit value before drop condition is cleared.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	14,
						"name":	"pool_id",
						"description":	"Optional Ingress Application pool for this PPG. Active if pool_max_cells is not zero.",
						"repeated":	false,
						"type":	{
							"type":	"string",
							"choices":	["IG_APP_POOL_0", "IG_APP_POOL_1", "IG_APP_POOL_2", "IG_APP_POOL_3"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	15,
						"name":	"pool_max_cells",
						"description":	"Limit, in terms of cells, to which the PPG buffer can grow inside the application pool. Limit is specified in number of cells. Once this limit is crossed, and if the PPG's burst absorption factor (BAF) is non zero then, depending on availability of buffers the PPG is allowed to use up to BAF limit of the buffer memory currently available. The PPG does not use shared pool if the pool_max_cells is set to zero.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	16,
						"name":	"dynamic_baf",
						"description":	"Dynamic Burst Absorption Factor value ID assigned for ths PPG. Used to decide how much of the available buffer memory can be used by the PPG. If BAF limit is NONE, the DPG is treated as static and no dynamic buffering is possible over the pool_max_cells.",
						"repeated":	false,
						"type":	{
							"type":	"string",
							"choices":	["1.5%", "3%", "6%", "11%", "20%", "33%", "50%", "66%", "80%", "DISABLE"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	17,
						"name":	"ppg_counter_id",
						"description":	"The PPG counter id associated with this PPG. Used to access a counter entry from table tm.counter.ppg.",
						"repeated":	false,
						"type":	{
							"type":	"uint8"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryAdd":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"Allocates a new PPG identified by dev_tgt.pipe_id and the ppg_id unique key chosen by the caller. The PPG is allocated for the dev_port which must be on the same pipe. Initially no iCoS is assigned to the new PPG. The should delete the PPG to avoid resource leak when it is not needed."
				},
				"tableEntryDel":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"Deletes an existing PPG identified by dev_tgt.pipe_id and the ppg_id unique key. The PPG will be freed and its iCoS released back to the Port's DPG."
				},
				"tableEntryMod":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"Updates an existing PPG identified by dev_tgt.pipe_id and the key; modifies values from the corresponding data fields."
				},
				"tableEntryGet":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"Retrieves an existing PPG identified by dev_tgt.pipe_id and the key; populates the corresponding data fields."
				},
				"tableEntryGetFirst":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"Fetches data fields of the very first entry in the pipe identified by dev_tgt.pipe_id."
				},
				"tableEntryGetNext_n":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"Fetches data fields of the next n entries in the table after the entry, identified by dev_tgt.pipe_id and the key."
				},
				"tableUsageGet":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"Returns how many PPGs are currently allocated on the pipe identified by dev_tgt.pipe_id or on all pipes with PIPE_ALL."
				},
				"tableClear":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"Deletes all currently allocated PPGs on the pipe identified by dev_tgt.pipe_id or for all pipes with PIPE_ALL. The iCoS will be released to Ports' DPGs."
				}
			}
		}, {
			"name":	"tf1.tm.pool.cfg",
			"description":	"This table is used to configure various properties for pools.",
			"id":	4278517762,
			"table_type":	"TmPoolCfg",
			"size":	14,
			"key":	[{
					"id":	1,
					"name":	"pool",
					"description":	"The pool identifier string.",
					"repeated":	false,
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"string",
						"choices":	["IG_APP_POOL_0", "IG_APP_POOL_1", "IG_APP_POOL_2", "IG_APP_POOL_3", "EG_APP_POOL_0", "EG_APP_POOL_1", "EG_APP_POOL_2", "EG_APP_POOL_3", "IG_SKID_POOL", "IG_EG_NEGATIVE_MIRROR_POOL", "EG_PRE_FIFO", "IG_EG_GUARANTEED_MIN", "EG_UNICAST_CUT_THROUGH", "EG_MULTICAST_CUT_THROUGH"]
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"size_cells",
						"description":	"Used to specify the number of cells that need to be allocated for a particular pool.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryMod":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to modify the size of the pool identified by the key field in terms of number of cells."
				},
				"tableEntryGet":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the current size of the pool identified by the key field in terms of number of cells."
				},
				"tableEntryGetFirst":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the name and the current size (in terms of number of cells) of the very first pool from the list of pools specified in the key field."
				},
				"tableEntryGetNext_n":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the names and the current sizes (in terms of number of cells) of the next n pools starting from the pool provided as an input parameter in the fixed order present in this json in the key field."
				},
				"tableUsageGet":	{
					"target_attributes":	[],
					"description":	"This API is used to fetch the current usage of the table in terms of number of entries. As this table has fixed number of entries, it will always return a constant value based on what all possible values the key field above can have."
				}
			}
		}, {
			"name":	"tf1.tm.pool.skid",
			"description":	"This table is used to configure various properties for the skid pool.",
			"id":	4278517763,
			"table_type":	"TmPoolSkid",
			"size":	1,
			"key":	[],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"resume_limit_cells",
						"description":	"Used to specify the number of cells that will need to be freed up in order to resume the link pause or PFC. Gets rounded down to the multiple of 8 if not.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableDefaultEntrySet":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to modify the current resume limit of the skid pool."
				},
				"tableDefaultEntryReset":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to reset the current resume limit of the skid pool to the initial value (0)."
				},
				"tableDefaultEntryGet":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the current resume limit of the skid pool."
				},
				"tableClear":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to reset the current resume limit of the skid pool to the initial value (0)."
				}
			}
		}, {
			"name":	"tf1.tm.pool.app",
			"description":	"This table is used to configure various properties for application pools.",
			"id":	4278517764,
			"table_type":	"TmPoolApp",
			"size":	8,
			"key":	[{
					"id":	1,
					"name":	"pool",
					"description":	"The application pool identifier string.",
					"repeated":	false,
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"string",
						"choices":	["IG_APP_POOL_0", "IG_APP_POOL_1", "IG_APP_POOL_2", "IG_APP_POOL_3", "EG_APP_POOL_0", "EG_APP_POOL_1", "EG_APP_POOL_2", "EG_APP_POOL_3"]
					}
				}],
			"action_specs":	[{
					"id":	1,
					"name":	"color_drop_disable",
					"data":	[]
				}, {
					"id":	2,
					"name":	"color_drop_enable",
					"data":	[{
							"id":	1,
							"name":	"green_limit_cells",
							"repeated":	false,
							"mandatory":	true,
							"annotations":	[],
							"type":	{
								"type":	"uint32"
							}
						}, {
							"id":	2,
							"name":	"yellow_limit_cells",
							"repeated":	false,
							"mandatory":	true,
							"annotations":	[],
							"type":	{
								"type":	"uint32"
							}
						}, {
							"id":	3,
							"name":	"red_limit_cells",
							"repeated":	false,
							"mandatory":	true,
							"annotations":	[],
							"type":	{
								"type":	"uint32"
							}
						}]
				}],
			"data":	[],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryMod":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to modify the various properties (described by the data fields above) of the application pool identified by the key field."
				},
				"tableEntryGet":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the current values of the properties (described by the data fields above) of the application pool identified by the key field."
				},
				"tableEntryGetFirst":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the name and the current values of the properties (described by the data fields above) of the very first application pool from the list of application pools specified in the key field."
				},
				"tableEntryGetNext_n":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the names and the current values of the properties (described by the data fields above) of the next n application pools starting from the application pool provided as an input parameter in the fixed order present in this json in the key field."
				},
				"tableUsageGet":	{
					"target_attributes":	[],
					"description":	"This API is used to fetch the current usage of the table in terms of number of entries. As this table has fixed number of entries, it will always return a constant value based on what all possible values the key field above can have."
				}
			}
		}, {
			"name":	"tf1.tm.pool.color",
			"description":	"This table is used to configure various properties for colors for all the application pools.",
			"id":	4278517765,
			"table_type":	"TmPoolColor",
			"size":	3,
			"key":	[{
					"id":	1,
					"name":	"color",
					"description":	"The color identifier string.",
					"repeated":	false,
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"string",
						"choices":	["GREEN", "YELLOW", "RED"]
					}
				}],
			"data":	[{
					"mandatory":	true,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"color_drop_resume_limit_cells",
						"description":	"Used to specify the number of cells for the resume limit. The resume condition is triggered when the pool usage for all the application pools drops by this value from the limit value which was originally set for the color drop.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryMod":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to modify the table entry identified by the key field in terms of number of cells."
				},
				"tableEntryGet":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the table entry identified by the key field in terms of number of cells."
				},
				"tableEntryGetFirst":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the table entry for the very first color from the list of colors specified in the key field."
				},
				"tableEntryGetNext_n":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the table entries for next n colors starting from the color provided as an input parameter in the fixed order present in this json in the key field."
				},
				"tableUsageGet":	{
					"target_attributes":	[],
					"description":	"This API is used to fetch the current usage of the table in terms of number of entries. As this table has fixed number of entries, it will always return a constant value based on what all possible values the key field (number of colors) above can have."
				},
				"tableClear":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to reset the data fields for the table entries for all the colors to their default values."
				}
			}
		}, {
			"name":	"tf1.tm.pool.app_pfc",
			"description":	"This table is used to configure various properties for the given application pool for the given COS (Class of Service) which used to implement PFC (Priority Flow Control).",
			"id":	4278517766,
			"table_type":	"TmPoolAppPfc",
			"size":	32,
			"key":	[{
					"id":	1,
					"name":	"pool",
					"description":	"The application pool identifier string.",
					"repeated":	false,
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"string",
						"choices":	["IG_APP_POOL_0", "IG_APP_POOL_1", "IG_APP_POOL_2", "IG_APP_POOL_3"]
					}
				}, {
					"id":	2,
					"name":	"cos",
					"description":	"Class of Service value (ranges between 0-7).",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"bytes",
						"width":	3
					}
				}],
			"data":	[{
					"mandatory":	true,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"pfc_limit_cells",
						"description":	"Used to specify the PFC limit in terms of number of cells for an application pool. When the PPG usage hits this limit, PFC is triggered.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryMod":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to modify the data fields for the table entry identified by the key field."
				},
				"tableEntryGet":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch data fields for the table entry identified by the key field."
				},
				"tableEntryGetFirst":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the first table entry identified by the first pool value from the key above and cos value 0."
				},
				"tableEntryGetNext_n":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the next n table entries for the entry specified in the input."
				},
				"tableUsageGet":	{
					"target_attributes":	[],
					"description":	"This API is used to fetch the current usage of the table in terms of number of entries. As this table has fixed number of entries, it will always return a constant value based on what all possible values the key fields above can have."
				},
				"tableClear":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to reset the data fields for all the table entries to their default values."
				}
			}
		}, {
			"name":	"tf1.tm.port.cfg",
			"description":	"TM Port general config parameters.",
			"id":	4278517776,
			"table_type":	"TmPortCfg",
			"size":	288,
			"key":	[{
					"id":	1,
					"name":	"dev_port",
					"description":	"The device port ID (a 9-bit value) to refer to a port on a Tofino based system; it is used for the Tofino fixed-function API calls and in P4 programming.",
					"repeated":	false,
					"annotations":	[{
							"name":	"$bfrt_port_type_class",
							"value":	"dev_port"
						}],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	1,
						"name":	"pg_id",
						"description":	"The port's Port Group ID value. To be used as a pg_id key to tm.port.group, or tm.queue tables together with egress_qid_queues[] values as pg_queue key.",
						"repeated":	false,
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	2,
						"name":	"pg_port_nr",
						"description":	"The port's number in its Port Group.",
						"repeated":	false,
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	3,
						"name":	"port_queues_count",
						"description":	"How many physical queues are carved for the Port from its Port Group resource. Also it is a value range for ingress_qid_map items. Modified via tm.port.group table.",
						"repeated":	false,
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	4,
						"name":	"ingress_qid_map",
						"description":	"Ingress Logical Queue IDs mapping of the Port. Each item's index corresponds to an inbound Logical Queue ID. Each item's value is a port queue number in the range of 0..port_queue_count-1. Modified via tm.port.group table.",
						"repeated":	true,
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	5,
						"name":	"egress_qid_queues",
						"description":	"The physical queues which are assigned at the Port Group to the Logical Queue IDs of this Port. Each item's index corresponds to an inbound Logical Queue ID. Each item's value is the port group queue number (pg_queue) assigned on this Port for the Logical Queue ID. This value is to be used as a key field for TM Queue object to access its parameters.",
						"repeated":	true,
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	6,
						"name":	"copy_to_cpu",
						"description":	"True if this port is the only port on its pipe which is connected to CPU for packet copy function enabled.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	7,
						"name":	"mirror_drop_destination",
						"description":	"True if this port is assigned for egressing out negative mirror traffic on its pipe (one port and one queue is used per pipe for this purpose). The queue (pg_id, mirror_drop_pg_queue) has the same value at its tm.queue.cfg.mirror_drop_destination.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	8,
						"name":	"mirror_drop_pg_queue",
						"description":	"Port group queue number of the Mirror Drop Queue if mirror_drop_destination is True, otherwise 0. Use (pg_id, mirror_drop_pg_queue) as a key to get the queue settings from TM Queue tables.",
						"repeated":	false,
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	9,
						"name":	"pkt_extraction_credits",
						"description":	"Get current egress packet expansion credits for the port.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryGet":	{
					"target_attributes":	["dev_id"],
					"description":	"Retrieves an existing TM object specified in the key fields and populates all the corresponding data fields."
				},
				"tableEntryGetFirst":	{
					"target_attributes":	["dev_id"],
					"description":	"Fetches data fields of the very first entry in the table."
				},
				"tableEntryGetNext_n":	{
					"target_attributes":	["dev_id"],
					"description":	"Fetches data fields of the next n entries in the table after the entry, identified by the key fields."
				},
				"tableUsageGet":	{
					"target_attributes":	["dev_id"],
					"description":	"Returns the table size constant value."
				}
			}
		}, {
			"name":	"tf1.tm.port.buffer",
			"description":	"TM Port memory buffer parameters.",
			"id":	4278517779,
			"table_type":	"TmPortBuffer",
			"size":	288,
			"key":	[{
					"id":	1,
					"name":	"dev_port",
					"description":	"The device port ID (a 9-bit value) to refer to a port on a Tofino based system; it is used for the Tofino fixed-function API calls and in P4 programming.",
					"repeated":	false,
					"annotations":	[{
							"name":	"$bfrt_port_type_class",
							"value":	"dev_port"
						}],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	1,
						"name":	"ct_enable",
						"description":	"Port cut-through mode. See also port.port.$CUT_THROUGH_EN",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"uc_ct_limit_cells",
						"description":	"The port cut-through buffer size in terms on number of cells. The specified size is set aside for unicast traffic in cut-through mode. Size in terms of cells. Valid values are [1..15].",
						"repeated":	false,
						"type":	{
							"type":	"string",
							"choices":	["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"ig_limit_cells",
						"description":	"When buffer usage accounted on this port crosses the limit, traffic is not admitted into traffic manager.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	4,
						"name":	"ig_hysteresis_cells",
						"description":	"The port ingress hysteresis limit. When usage of cells goes below the hysteresis value, then the port pause or drop condition will be cleared.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	5,
						"name":	"eg_limit_cells",
						"description":	"When buffer usage accounted on this port crosses the limit, traffic will be dropped on egress (QAC) stage.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	6,
						"name":	"eg_hysteresis_cells",
						"description":	"The port egress hysteresis limit. When usage of cells goes below the hysteresis value, then the port drop condition will be cleared.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	7,
						"name":	"skid_limit_cells",
						"description":	"The port skid limit. Cannot be increased beyond the size of the skid pool. If set to zero, in transit traffic from all lossless PPGs of the port will be dropped once pause/pfc is asserted.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryGet":	{
					"target_attributes":	["dev_id"],
					"description":	"Retrieves an existing TM object specified in the key fields and populates all the corresponding data fields."
				},
				"tableEntryGetFirst":	{
					"target_attributes":	["dev_id"],
					"description":	"Fetches data fields of the very first entry in the table."
				},
				"tableEntryGetNext_n":	{
					"target_attributes":	["dev_id"],
					"description":	"Fetches data fields of the next n entries in the table after the entry, identified by the key fields."
				},
				"tableEntryMod":	{
					"target_attributes":	["dev_id"],
					"description":	"Updates an entry identified by the key fields with values from the corresponding data fields."
				},
				"tableClear":	{
					"target_attributes":	["dev_id"],
					"description":	"Resets to HW default settings all the entries in the table."
				},
				"tableUsageGet":	{
					"target_attributes":	["dev_id"],
					"description":	"Returns the table size constant value."
				}
			}
		}, {
			"name":	"tf1.tm.port.flowcontrol",
			"description":	"TM Port flow control parameters.",
			"id":	4278517780,
			"table_type":	"TmPortFlowcontrol",
			"size":	288,
			"key":	[{
					"id":	1,
					"name":	"dev_port",
					"description":	"The device port ID (a 9-bit value) to refer to a port on a Tofino based system; it is used for the Tofino fixed-function API calls and in P4 programming.",
					"repeated":	false,
					"annotations":	[{
							"name":	"$bfrt_port_type_class",
							"value":	"dev_port"
						}],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"mode_tx",
						"description":	"Flow control mode to use on the port: PFC (IEE 802.1Qbb), port PAUSE (IEEE 802.3 ) or NONE. Default is no pause or flow control.",
						"repeated":	false,
						"type":	{
							"type":	"string",
							"choices":	["NONE", "PFC", "PAUSE"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	2,
						"name":	"mode_rx",
						"description":	"How the port should react on flow control frame: PFC - to honor PPF; PORT - to pause the port; NONE - flow control request frame is ignored and traffic will continue to be pushed into egress pipe and egress port. Default: ignore pause and PFC.",
						"repeated":	false,
						"type":	{
							"type":	"string",
							"choices":	["NONE", "PFC", "PAUSE"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"cos_to_icos",
						"description":	"When the Port needs to send PFC frame to the connected counterparty in the PFC mode, then it will translate iCoS to CoS using this map. Default: stright mapping iCoS = CoS",
						"repeated":	true,
						"type":	{
							"type":	"uint8"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryGet":	{
					"target_attributes":	["dev_id"],
					"description":	"Retrieves an existing TM object specified in the key fields and populates all the corresponding data fields."
				},
				"tableEntryGetFirst":	{
					"target_attributes":	["dev_id"],
					"description":	"Fetches data fields of the very first entry in the table."
				},
				"tableEntryGetNext_n":	{
					"target_attributes":	["dev_id"],
					"description":	"Fetches data fields of the next n entries in the table after the entry, identified by the key fields."
				},
				"tableEntryMod":	{
					"target_attributes":	["dev_id"],
					"description":	"Updates an entry identified by the key fields with values from the corresponding data fields."
				},
				"tableClear":	{
					"target_attributes":	["dev_id"],
					"description":	"Resets to HW default settings all the entries in the table."
				},
				"tableUsageGet":	{
					"target_attributes":	["dev_id"],
					"description":	"Returns the table size constant value."
				}
			}
		}, {
			"name":	"tf1.tm.port.group_cfg",
			"description":	"TM Port Group general config parameters.",
			"id":	4278517777,
			"table_type":	"TmPortGroupCfg",
			"size":	1,
			"key":	[],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"ingress_qid_max",
						"description":	"Maximum ingress Logical Queue IDs allowed for mapping to physical queues on the ports of a port group.",
						"repeated":	false,
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"pg_queues",
						"description":	"Maximum physical queues available for a port group.",
						"repeated":	false,
						"type":	{
							"type":	"uint8"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableDefaultEntryGet":	{
					"description":	"Returns HW default settings for the data fields.",
					"target_attributes":	["dev_id"]
				},
				"tableEntryGet":	{
					"description":	"Retrieves the only entry available without a key populating the corresponding data fields.",
					"target_attributes":	["dev_id"]
				},
				"tableEntryGetFirst":	{
					"description":	"Fetches data fields of the very first and the only entry in the table.",
					"target_attributes":	["dev_id"]
				},
				"tableUsageGet":	{
					"description":	"Returns the table size constant value.",
					"target_attributes":	["dev_id"]
				}
			}
		}, {
			"name":	"tf1.tm.port.group",
			"description":	"TM Port Group parameters.",
			"id":	4278517778,
			"table_type":	"TmPortGroup",
			"size":	72,
			"key":	[{
					"id":	1,
					"name":	"pg_id",
					"description":	"The device port group (valid range for Tofino is 0..17 at each pipe).",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint8"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	1,
						"name":	"pg_dev_ports",
						"description":	"The device Ports in this Port Group. The device port ID (a 9-bit value) refers to a physical port on a Tofino based system; it is used in the Tofino fixed-function API calls and in P4 programming.",
						"repeated":	true,
						"annotations":	[{
								"name":	"$bfrt_port_type_class",
								"value":	"dev_port"
							}],
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"action_specs":	[{
					"id":	1,
					"name":	"map",
					"data":	[{
							"mandatory":	false,
							"read_only":	false,
							"singleton":	{
								"id":	2,
								"name":	"port_queue_count",
								"description":	"How many physical queues are carved to this egress port from its port group resource. Each item is equal to how many unique items are in the ingress_qid_map_ of the appropriate port. The sum for all the items must be less or equal to the tm.port.group_cfg.pg_queues",
								"repeated":	true,
								"type":	{
									"type":	"uint8"
								}
							}
						}, {
							"mandatory":	false,
							"read_only":	false,
							"singleton":	{
								"id":	3,
								"name":	"ingress_qid_map_0",
								"description":	"Ingress Logical Queue IDs mapping of the port group's port 0 which port ID is in pg_dev_ports[0]. Each item's index corresponds to an inbound Logical Queue ID. Each item's value is a port queue number in the range of 0..port_queue_count[0].",
								"repeated":	true,
								"type":	{
									"type":	"uint8"
								}
							}
						}, {
							"mandatory":	false,
							"read_only":	true,
							"singleton":	{
								"id":	4,
								"name":	"egress_qid_queues_0",
								"description":	"The Port Group physical queues which are assigned from its resources to the Logical Queue IDs for the Port Group's port 0. The appropriate port ID is in the pg_dev_ports[0]. Each item's index corresponds to an inbound Logical Queue ID. Each item's value is the egress port group queue number pg_queue assigned on the port for the Logical Queue ID. This value is to be used as a key field for TM Queue tables.",
								"repeated":	true,
								"type":	{
									"type":	"uint8"
								}
							}
						}, {
							"mandatory":	false,
							"read_only":	false,
							"singleton":	{
								"id":	5,
								"name":	"ingress_qid_map_1",
								"description":	"Ingress Logical Queue IDs mapping of the port group's port 1 which port ID is in pg_dev_ports[1]. Each item's index corresponds to an inbound Logical Queue ID. Each item's value is a port queue number in the range of 0..port_queue_count[1].",
								"repeated":	true,
								"type":	{
									"type":	"uint8"
								}
							}
						}, {
							"mandatory":	false,
							"read_only":	true,
							"singleton":	{
								"id":	6,
								"name":	"egress_qid_queues_1",
								"description":	"The Port Group physical queues which are assigned from its resources to the Logical Queue IDs for the Port Group's port 1. The appropriate port ID is in the pg_dev_ports[1]. Each item's index corresponds to an inbound Logical Queue ID. Each item's value is the egress port group queue number pg_queue assigned on the port for the Logical Queue ID. This value is to be used as a key field for TM Queue tables.",
								"repeated":	true,
								"type":	{
									"type":	"uint8"
								}
							}
						}, {
							"mandatory":	false,
							"read_only":	false,
							"singleton":	{
								"id":	7,
								"name":	"ingress_qid_map_2",
								"description":	"Ingress Logical Queue IDs mapping of the port group's port 2 which port ID is in pg_dev_ports[2]. Each item's index corresponds to an inbound Logical Queue ID. Each item's value is a port queue number in the range of 0..port_queue_count[2].",
								"repeated":	true,
								"type":	{
									"type":	"uint8"
								}
							}
						}, {
							"mandatory":	false,
							"read_only":	true,
							"singleton":	{
								"id":	8,
								"name":	"egress_qid_queues_2",
								"description":	"The Port Group physical queues which are assigned from its resources to the Logical Queue IDs for the Port Group's port 2. The appropriate port ID is in the pg_dev_ports[2]. Each item's index corresponds to an inbound Logical Queue ID. Each item's value is the egress port group queue number pg_queue assigned on the port for the Logical Queue ID. This value is to be used as a key field for TM Queue tables.",
								"repeated":	true,
								"type":	{
									"type":	"uint8"
								}
							}
						}, {
							"mandatory":	false,
							"read_only":	false,
							"singleton":	{
								"id":	9,
								"name":	"ingress_qid_map_3",
								"description":	"Ingress Logical Queue IDs mapping of the port group's port 3 which port ID is in pg_dev_ports[3]. Each item's index corresponds to an inbound Logical Queue ID. Each item's value is a port queue number in the range of 0..port_queue_count[3].",
								"repeated":	true,
								"type":	{
									"type":	"uint8"
								}
							}
						}, {
							"mandatory":	false,
							"read_only":	true,
							"singleton":	{
								"id":	10,
								"name":	"egress_qid_queues_3",
								"description":	"The Port Group physical queues which are assigned from its resources to the Logical Queue IDs for the Port Group's port 3. The appropriate port ID is in the pg_dev_ports[3]. Each item's index corresponds to an inbound Logical Queue ID. Each item's value is the egress port group queue number pg_queue assigned on the port for the Logical Queue ID. This value is to be used as a key field for TM Queue tables.",
								"repeated":	true,
								"type":	{
									"type":	"uint8"
								}
							}
						}],
					"annotations":	[]
				}, {
					"id":	2,
					"name":	"seq",
					"data":	[{
							"mandatory":	false,
							"read_only":	false,
							"singleton":	{
								"id":	2,
								"name":	"port_queue_count",
								"description":	"How many physical queues are carved to this egress port from its port group resource. Each item is equal to how many unique items will be in the ingress_qid_map_ of the appropriate port. The sum for all the items must be less or equal to the tm.port.group_cfg.pg_queues",
								"repeated":	true,
								"type":	{
									"type":	"uint8"
								}
							}
						}],
					"annotations":	[]
				}, {
					"id":	3,
					"name":	"even",
					"data":	[{
							"mandatory":	false,
							"read_only":	false,
							"singleton":	{
								"id":	2,
								"name":	"port_queue_count",
								"description":	"How many physical queues are carved to this egress port from its port group resource. Each item is equal to how many unique items will be in the ingress_qid_map_ of the appropriate port. The sum for all the items must be less or equal to the tm.port.group_cfg.pg_queues",
								"repeated":	true,
								"type":	{
									"type":	"uint8"
								}
							}
						}],
					"annotations":	[]
				}, {
					"id":	4,
					"name":	"crop",
					"data":	[{
							"mandatory":	true,
							"read_only":	false,
							"singleton":	{
								"id":	2,
								"name":	"port_queue_count",
								"description":	"How many physical queues are carved to this egress port from its port group resource. Each item is equal to how many unique items will be in the ingress_qid_map_ of the appropriate port. The sum for all the items must be less or equal to the tm.port.group_cfg.pg_queues",
								"repeated":	true,
								"type":	{
									"type":	"uint8"
								}
							}
						}],
					"annotations":	[]
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableDefaultEntryGet":	{
					"description":	"Returns HW default settings for the data fields as 'map' action.",
					"target_attributes":	["dev_id"]
				},
				"tableEntryGet":	{
					"description":	"Retrieves an entry identified by the key fields populating the corresponding data fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryGetFirst":	{
					"description":	"Fetches data fields of the very first entry in the pipe.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryGetNext_n":	{
					"description":	"Fetches data fields of the next n entries in the pipe after the entry, identified by the key fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryMod":	{
					"description":	"Updates an entry identified by the key fields with values from the corresponding data fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableClear":	{
					"description":	"Resets to HW default settings all the entries in the pipe, or in the table with PIPE_ALL.",
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				},
				"tableUsageGet":	{
					"description":	"Returns the table size constant value per pipe, or for all pipes with PIPE_ALL.",
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				}
			}
		}, {
			"name":	"tf1.tm.queue.cfg",
			"description":	"TM Queue general config parameters.",
			"id":	4278517793,
			"table_type":	"TmQueueCfg",
			"size":	2304,
			"key":	[{
					"id":	1,
					"name":	"pg_id",
					"description":	"The device port group (valid range for Tofino is 0..17 at each pipe).",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint8"
					}
				}, {
					"id":	2,
					"name":	"pg_queue",
					"description":	"The device port group queue number (valid range for Tofino is 0..31).",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint8"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	1,
						"name":	"mirror_drop_destination",
						"description":	"Indicates if the Queue is assigned for egressing out negative mirror traffic on its port pipe (one such queue per pipe).",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"pfc_cos",
						"description":	"Non-zero CoS value set when the egress queue needs to honor received PFC from downstream. The queue will not participate in scheduling until PFC gets cleared. By default, all queues use mapping CoS zero.",
						"repeated":	false,
						"type":	{
							"type":	"uint8"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableDefaultEntryGet":	{
					"description":	"Returns HW default settings for the data fields.",
					"target_attributes":	["dev_id"]
				},
				"tableEntryGet":	{
					"description":	"Retrieves an entry identified by the key fields populating the corresponding data fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryGetFirst":	{
					"description":	"Fetches data fields of the very first entry in the pipe.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryGetNext_n":	{
					"description":	"Fetches data fields of the next n entries in the pipe after the entry, identified by the key fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryMod":	{
					"description":	"Updates an entry identified by the key fields with values from the corresponding data fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableClear":	{
					"description":	"Resets to HW default settings all the entries in the pipe, or in the table with PIPE_ALL.",
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				},
				"tableUsageGet":	{
					"description":	"Returns the table size constant value.",
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				}
			}
		}, {
			"name":	"tf1.tm.queue.map",
			"description":	"TM Queue mappings.",
			"id":	4278517794,
			"table_type":	"TmQueueMap",
			"size":	2304,
			"key":	[{
					"id":	1,
					"name":	"pg_id",
					"description":	"The device port group (valid range for Tofino is 0..17 at each pipe).",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint8"
					}
				}, {
					"id":	2,
					"name":	"pg_queue",
					"description":	"The device port group queue number (valid range for Tofino is 0..31).",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint8"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	1,
						"name":	"dev_port",
						"description":	"The device port ID (a 9-bit value) which currently uses this physical queue.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	2,
						"name":	"queue_nr",
						"description":	"The device port queue number which is currently mapped to this physical queue.",
						"repeated":	false,
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	3,
						"name":	"ingress_qid_max",
						"description":	"Maximum ingress Logical Queue IDs mappings allowed to this physical queue.",
						"repeated":	false,
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	4,
						"name":	"ingress_qid_count",
						"description":	"How many ingress Logical Queue IDs are mapped to this queue. Equals to number of items in the ingress_qid_list. Indirectly changed by tm.port_group.",
						"repeated":	false,
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	5,
						"name":	"ingress_qid_list",
						"description":	"Ingress Logical Queue IDs mapped to this queue. Represents inverse map to what tm.port_group provides. Indirectly changed by tm.port_group.",
						"repeated":	true,
						"type":	{
							"type":	"uint8"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryGet":	{
					"description":	"Retrieves an entry identified by the key fields populating the corresponding data fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryGetFirst":	{
					"description":	"Fetches data fields of the very first entry in the pipe.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryGetNext_n":	{
					"description":	"Fetches data fields of the next n entries in the pipe after the entry, identified by the key fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableUsageGet":	{
					"description":	"Returns the table size constant value.",
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				}
			}
		}, {
			"name":	"tf1.tm.queue.color",
			"description":	"TM Queue color limits.",
			"id":	4278517795,
			"table_type":	"TmQueueColor",
			"size":	2304,
			"key":	[{
					"id":	1,
					"name":	"pg_id",
					"description":	"The device port group (valid range for Tofino is 0..17 at each pipe).",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint8"
					}
				}, {
					"id":	2,
					"name":	"pg_queue",
					"description":	"The device port group queue number (valid range for Tofino is 0..31).",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint8"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"drop_enable",
						"description":	"The Queue color drop mode. Based on packet color, when a queue color threshold limit is reached, packets are dropped. By default it is False and color tail drop is disabled.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"drop_limit_yellow",
						"description":	"Yellow color drop limit. Should be larger than the red color drop limit.",
						"repeated":	false,
						"type":	{
							"type":	"string",
							"choices":	["12.5%", "25%", "37.5%", "50%", "62.5%", "75%", "87.5%", "100%"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"drop_limit_red",
						"description":	"Red color drop limit. Should be smaller than the yellow color drop limit.",
						"repeated":	false,
						"type":	{
							"type":	"string",
							"choices":	["12.5%", "25%", "37.5%", "50%", "62.5%", "75%", "87.5%", "100%"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	4,
						"name":	"hysteresis_yellow_cells",
						"description":	"Yellow color hysteresis limit in cells the queue usage should fall from its limit value before drop condition is cleared. The value will be set to HW rounded down to 8 cell units.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	5,
						"name":	"hysteresis_red_cells",
						"description":	"Red color hysteresis limit in units of 8 cells the queue usage should fall from its limit value before drop condition is cleared. The value will be set to HW rounded down to 8 cell units",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableDefaultEntryGet":	{
					"description":	"Returns HW default settings for the data fields.",
					"target_attributes":	["dev_id"]
				},
				"tableEntryGet":	{
					"description":	"Retrieves an entry identified by the key fields populating the corresponding data fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryGetFirst":	{
					"description":	"Fetches data fields of the very first entry in the pipe.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryGetNext_n":	{
					"description":	"Fetches data fields of the next n entries in the pipe after the entry, identified by the key fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryMod":	{
					"description":	"Updates an entry identified by the key fields with values from the corresponding data fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableClear":	{
					"description":	"Resets to HW default settings all the entries in the pipe, or in the table with PIPE_ALL.",
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				},
				"tableUsageGet":	{
					"description":	"Returns the table size constant value.",
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				}
			}
		}, {
			"name":	"tf1.tm.queue.buffer",
			"description":	"TM Queue buffer and shared pool assignments.",
			"id":	4278517796,
			"table_type":	"TmQueueBuffer",
			"size":	2304,
			"key":	[{
					"id":	1,
					"name":	"pg_id",
					"description":	"The device port group (valid range for Tofino is 0..17 at each pipe).",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint8"
					}
				}, {
					"id":	2,
					"name":	"pg_queue",
					"description":	"The device port group queue number (valid range for Tofino is 0..31).",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint8"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"guaranteed_cells",
						"description":	"The guaranteed minimum buffer size allocated to the queue in terms of number of cells not included into a shared pool. By default, the TM buffer capacity is equally distributed among all the queues that are active. If zero, then the pool_max_cells from the shared pool should be assigned.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"hysteresis_cells",
						"description":	"Hysteresis limit in number of cells the queue usage should reduce before drop condition is cleared. The value will be set to HW rounded down to 8 cell units.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"tail_drop_enable",
						"description":	"The queue tail drop mode. By default, the packet drops are enabled when queue threshold limits are reached. Setting this to False will not drop packets on the egress side even if the threshold limits are reached, which will lead to ingress drops eventually.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}],
			"action_specs":	[{
					"id":	1,
					"name":	"shared_pool",
					"data":	[{
							"mandatory":	false,
							"read_only":	false,
							"singleton":	{
								"id":	4,
								"name":	"pool_id",
								"description":	"Egress Application pool to be used for the port queue.",
								"repeated":	false,
								"type":	{
									"type":	"string",
									"choices":	["EG_APP_POOL_0", "EG_APP_POOL_1", "EG_APP_POOL_2", "EG_APP_POOL_3"]
								}
							}
						}, {
							"mandatory":	false,
							"read_only":	false,
							"singleton":	{
								"id":	5,
								"name":	"pool_max_cells",
								"description":	"Limit, in terms of cells, to which the queue buffer can grow inside the application pool. Once this limit is crossed, and if the queue burst absorption factor (BAF) is non zero, then depending on availability of buffers the queue is allowed to use up to BAF limit of the buffer memory currently available. The queue does not use shared pool if the pool_max_cells is set to zero, the same way as the action 'buffer_only' does, and in this case the guaranteed_cells should be non-zero.",
								"repeated":	false,
								"type":	{
									"type":	"uint32"
								}
							}
						}, {
							"mandatory":	false,
							"read_only":	false,
							"singleton":	{
								"id":	6,
								"name":	"dynamic_baf",
								"description":	"Dynamic Burst Absorption Factor value ID assigned for the queue. Used to decide how much of the available buffer memory can be used for the queue. If BAF limit is NONE, the queue is treated as static and no dynamic buffering is possible over the pool_max_cells.",
								"repeated":	false,
								"type":	{
									"type":	"string",
									"choices":	["1.5%", "3%", "6%", "11%", "20%", "33%", "50%", "66%", "80%", "DISABLE"]
								}
							}
						}],
					"annotations":	[]
				}, {
					"id":	2,
					"name":	"buffer_only",
					"data":	[],
					"annotations":	[]
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableDefaultEntryGet":	{
					"description":	"Returns HW default settings for the data fields as 'shared_pool' action.",
					"target_attributes":	["dev_id"]
				},
				"tableEntryGet":	{
					"description":	"Retrieves an entry identified by the key fields populating the corresponding data fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryGetFirst":	{
					"description":	"Fetches data fields of the very first entry in the pipe.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryGetNext_n":	{
					"description":	"Fetches data fields of the next n entries in the pipe after the entry, identified by the key fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryMod":	{
					"description":	"Updates an entry identified by the key fields with values from the corresponding data fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableClear":	{
					"description":	"Resets to HW default settings all the entries in the pipe, or in the table with PIPE_ALL.",
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				},
				"tableUsageGet":	{
					"description":	"Returns the table size constant value.",
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				}
			}
		}, {
			"name":	"tf1.tm.queue.sched_cfg",
			"description":	"TM Queue Scheduler parameters.",
			"id":	4278517797,
			"table_type":	"TmQueueSchedCfg",
			"size":	2304,
			"key":	[{
					"id":	1,
					"name":	"pg_id",
					"description":	"The device port group (valid range for Tofino is 0..17 at each pipe).",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint8"
					}
				}, {
					"id":	2,
					"name":	"pg_queue",
					"description":	"The device port group queue number (valid range for Tofino is 0..31).",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint8"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"min_rate_enable",
						"description":	"Enable token bucket that assures guaranteed (min) rate for the Queue with tm.queue.sched_shaping parameters.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"min_priority",
						"description":	"The queue scheduling priority when serving guaranteed (min) bandwidth.",
						"repeated":	false,
						"type":	{
							"type":	"string",
							"choices":	["LOW", "0", "1", "2", "3", "4", "5", "6", "7", "HIGH"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	5,
						"name":	"max_rate_enable",
						"description":	"Enable token bucket that assures max shaping rate for the Queue with tm.queue.sched_shaping parameters.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	4,
						"name":	"max_priority",
						"description":	"The queue scheduling priority when serving max shaping bandwidth.",
						"repeated":	false,
						"type":	{
							"type":	"string",
							"choices":	["LOW", "0", "1", "2", "3", "4", "5", "6", "7", "HIGH"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"dwrr_weight",
						"description":	"The queue DWRR weight.",
						"repeated":	false,
						"type":	{
							"type":	"uint16"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	6,
						"name":	"scheduling_enable",
						"description":	"Enable the Queue for scheduling. If disabled, queue will not participate in scheduling.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryGet":	{
					"description":	"Retrieves an existing entry identified by dev_tgt.pipe_id and the key fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryGetFirst":	{
					"description":	"Fetches the very first enty from the dev_tgt.pipe_id.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryGetNext_n":	{
					"description":	"Fetches next n entries from the dev_tgt.pipe_id after the entry, identified by the key.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryMod":	{
					"description":	"Updates an existing entry identified by dev_tgt.pipe_id and the key fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableClear":	{
					"description":	"Resets to HW default settings all the entries in the dev_tgt.pipe_id, or in the table with PIPE_ALL.",
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				},
				"tableUsageGet":	{
					"description":	"Returns the table size constant value for the dev_tgt.pipe_id, or in the table with PIPE_ALL.",
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				}
			}
		}, {
			"name":	"tf1.tm.queue.sched_shaping",
			"description":	"TM Queue Scheduler shaping settings.",
			"id":	4278517798,
			"table_type":	"TmQueueSchedShaping",
			"size":	2304,
			"key":	[{
					"id":	1,
					"name":	"pg_id",
					"description":	"The device port group (valid range for Tofino is 0..17 at each pipe).",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint8"
					}
				}, {
					"id":	2,
					"name":	"pg_queue",
					"description":	"The device port group queue number (valid range for Tofino is 0..31).",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint8"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"unit",
						"description":	"Unit of shaping rate and burst size: PPS - in Packets/s for rate, Packets for burst; BPS - Kbit/s for rate, Bytes for burst.",
						"repeated":	false,
						"type":	{
							"type":	"string",
							"choices":	["PPS", "BPS"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"provisioning",
						"description":	"Shaper provisioning mode: how values are translated to mantissa/exponent HW representation.",
						"repeated":	false,
						"type":	{
							"type":	"string",
							"choices":	["UPPER", "LOWER", "MIN_ERROR"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"min_rate",
						"description":	"Guaranteed shaping rate in units: Packets/s for 'PPS', or Kbit/s for 'BPS'. Read value is approximate 'provisioning mode' calculation to HW representation.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	4,
						"name":	"min_burst_size",
						"description":	"Guaranteed shaping burst size in units: Packets for 'PPS', or Bytes for 'BPS'.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	5,
						"name":	"max_rate",
						"description":	"Remaining shaping rate in units: Packets/s for 'PPS', or Kbit/s for 'BPS'. Read value is approximate 'provisioning mode' calculation to HW representation.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	6,
						"name":	"max_burst_size",
						"description":	"Remaining shaping burst size in units: Packets for 'PPS', or Bytes for 'BPS'.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryGet":	{
					"description":	"Retrieves an existing entry identified by dev_tgt.pipe_id and the key fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryGetFirst":	{
					"description":	"Fetches the very first enty from the dev_tgt.pipe_id.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryGetNext_n":	{
					"description":	"Fetches next n entries from the dev_tgt.pipe_id after the entry, identified by the key.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableEntryMod":	{
					"description":	"Updates an existing entry identified by dev_tgt.pipe_id and the key fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableClear":	{
					"description":	"Resets to HW default settings all the entries in the dev_tgt.pipe_id, or in the table with PIPE_ALL.",
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				},
				"tableUsageGet":	{
					"description":	"Returns the table size constant value for the dev_tgt.pipe_id, or in the table with PIPE_ALL.",
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				}
			}
		}, {
			"name":	"tf1.tm.port.sched_cfg",
			"description":	"TM Port Scheduler parameters.",
			"id":	4278517782,
			"table_type":	"TmPortSchedCfg",
			"size":	288,
			"key":	[{
					"id":	1,
					"name":	"dev_port",
					"description":	"The device port ID (a 9-bit value) to refer to a port on a Tofino based system; it is used for the Tofino fixed-function API calls and in P4 programming.",
					"repeated":	false,
					"annotations":	[{
							"name":	"$bfrt_port_type_class",
							"value":	"dev_port"
						}],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"max_rate_enable",
						"description":	"Enable token bucket that assures max shaping rate for the Port with tm.port.sched_shaping parameters.",
						"repeated":	false,
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"scheduling_speed",
						"description":	"Port scheduling speed. Set 'BF_SPEED_NONE' to disable Port's scheduling.",
						"repeated":	false,
						"type":	{
							"type":	"string",
							"choices":	["BF_SPEED_NONE", "BF_SPEED_1G", "BF_SPEED_10G", "BF_SPEED_25G", "BF_SPEED_40G", "BF_SPEED_40G_NB", "BF_SPEED_40G_NON_BREAKABLE", "BF_SPEED_50G", "BF_SPEED_100G"]
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryGet":	{
					"description":	"Retrieves an existing entry identified by the key field.",
					"target_attributes":	["dev_id"]
				},
				"tableEntryGetFirst":	{
					"description":	"Fetches the very first enty",
					"target_attributes":	["dev_id"]
				},
				"tableEntryGetNext_n":	{
					"description":	"Fetches next n entries after the entry, identified by the key.",
					"target_attributes":	["dev_id"]
				},
				"tableEntryMod":	{
					"description":	"Updates an existing entry identified by the key field.",
					"target_attributes":	["dev_id"]
				},
				"tableClear":	{
					"description":	"Resets to HW default settings all the entries in the table.",
					"target_attributes":	["dev_id"]
				},
				"tableUsageGet":	{
					"description":	"Returns the table size constant value.",
					"target_attributes":	["dev_id"]
				}
			}
		}, {
			"name":	"tf1.tm.port.sched_shaping",
			"description":	"TM Port Scheduler shaping settings.",
			"id":	4278517783,
			"table_type":	"TmPortSchedShaping",
			"size":	288,
			"key":	[{
					"id":	1,
					"name":	"dev_port",
					"description":	"The device port ID (a 9-bit value) to refer to a port on a Tofino based system; it is used for the Tofino fixed-function API calls and in P4 programming.",
					"repeated":	false,
					"annotations":	[{
							"name":	"$bfrt_port_type_class",
							"value":	"dev_port"
						}],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"unit",
						"description":	"Unit of shaping rate and burst size: PPS - in Packets/s for rate, Packets for burst; BPS - Kbit/s for rate, Bytes for burst.",
						"repeated":	false,
						"type":	{
							"type":	"string",
							"choices":	["PPS", "BPS"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"provisioning",
						"description":	"Shaper provisioning mode: how values are translated to mantissa/exponent HW representation.",
						"repeated":	false,
						"type":	{
							"type":	"string",
							"choices":	["UPPER", "LOWER", "MIN_ERROR"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"max_rate",
						"description":	"Port Shaping rate in units: Packets/s for 'PPS', or Kbit/s for 'BPS'. Read value is approximate 'provisioning mode' calculation to HW representation.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	4,
						"name":	"max_burst_size",
						"description":	"Port Shaping burst size in units: Packets for 'PPS', or Bytes for 'BPS'.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryGet":	{
					"description":	"Retrieves an existing entry identified by the key field.",
					"target_attributes":	["dev_id"]
				},
				"tableEntryGetFirst":	{
					"description":	"Fetches the very first enty",
					"target_attributes":	["dev_id"]
				},
				"tableEntryGetNext_n":	{
					"description":	"Fetches next n entries after the entry, identified by the key.",
					"target_attributes":	["dev_id"]
				},
				"tableEntryMod":	{
					"description":	"Updates an existing entry identified by the key field.",
					"target_attributes":	["dev_id"]
				},
				"tableClear":	{
					"description":	"Resets to HW default settings all the entries in the table.",
					"target_attributes":	["dev_id"]
				},
				"tableUsageGet":	{
					"description":	"Returns the table size constant value.",
					"target_attributes":	["dev_id"]
				}
			}
		}, {
			"name":	"tf1.tm.counter.ig_port",
			"description":	"This table is used to read or clear various counters for ports from ingress TM perspective.",
			"id":	4278517825,
			"table_type":	"TmCounterIgPort",
			"size":	288,
			"key":	[{
					"id":	1,
					"name":	"dev_port",
					"description":	"The device port ID (a 9-bit value, for example 189) used to refer to a traffic port on a Tofino based system. The dev-port is the port designation used in the Tofino fixed-function API calls and in P4 programming.",
					"repeated":	false,
					"annotations":	[{
							"name":	"$bfrt_port_type_class",
							"value":	"dev_port"
						}],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"drop_count_packets",
						"description":	"Per port drop count in terms of number of packets.",
						"repeated":	false,
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	2,
						"name":	"usage_cells",
						"description":	"Port usage count in terms of number of cells.",
						"repeated":	false,
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"watermark_cells",
						"description":	"Watermark value for port in terms of number of cells.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryMod":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to modify the data fields for the table entry identified by the key field."
				},
				"tableEntryGet":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch data fields for the table entry identified by the key field."
				},
				"tableEntryGetFirst":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the first table entry identified by the first device port identifier."
				},
				"tableEntryGetNext_n":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the next n table entries for the entry specified in the input."
				},
				"tableUsageGet":	{
					"target_attributes":	[],
					"description":	"This API is used to fetch the current usage of the table in terms of number of entries. As this table has fixed number of entries, it will always return a constant value based on what all possible values the key fields above can have."
				},
				"tableClear":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to reset the data fields for all the table entries to their default values."
				}
			}
		}, {
			"name":	"tf1.tm.counter.eg_port",
			"description":	"This table is used to read or clear various counters for ports from egress TM perspective.",
			"id":	4278517826,
			"table_type":	"TmCounterEgPort",
			"size":	288,
			"key":	[{
					"id":	1,
					"name":	"dev_port",
					"description":	"The device port ID (a 9-bit value, for example 189) used to refer to a traffic port on a Tofino based system. The dev-port is the port designation used in the Tofino fixed-function API calls and in P4 programming.",
					"repeated":	false,
					"annotations":	[{
							"name":	"$bfrt_port_type_class",
							"value":	"dev_port"
						}],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"drop_count_packets",
						"description":	"Per port drop count in terms of number of packets.",
						"repeated":	false,
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	2,
						"name":	"usage_cells",
						"description":	"Port usage count in terms of number of cells.",
						"repeated":	false,
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"watermark_cells",
						"description":	"Watermark value for port in terms of number of cells.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryMod":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to modify the data fields for the table entry identified by the key field. The fields with clear_only annotation can only be written with 0."
				},
				"tableEntryGet":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch data fields for the table entry identified by the key field."
				},
				"tableEntryGetFirst":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the first table entry identified by the first device port identifier."
				},
				"tableEntryGetNext_n":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the next n table entries for the entry specified in the input."
				},
				"tableUsageGet":	{
					"target_attributes":	[],
					"description":	"This API is used to fetch the current usage of the table in terms of number of entries. As this table has fixed number of entries, it will always return a constant value based on what all possible values the key fields above can have."
				},
				"tableClear":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to reset the R/W data fields for all the table entries to their default values (0 here)."
				}
			}
		}, {
			"name":	"tf1.tm.counter.queue",
			"description":	"This table is used to read or clear various counters for egress queues.",
			"id":	4278517827,
			"table_type":	"TmCounterQueue",
			"size":	576,
			"key":	[{
					"id":	1,
					"name":	"pg_id",
					"description":	"The device port group (valid range for Tofino is 0..17 at each pipe).",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint8"
					}
				}, {
					"id":	2,
					"name":	"pg_queue",
					"description":	"The device port group queue number (valid range for Tofino is 0..31).",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint8"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"drop_count_packets",
						"description":	"Per queue drop count in terms of number of packets.",
						"repeated":	false,
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	2,
						"name":	"usage_cells",
						"description":	"Queue usage count in terms of number of cells.",
						"repeated":	false,
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"watermark_cells",
						"description":	"Watermark value for queue in terms of number of cells.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryMod":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"This API is used to modify the data fields for the table entry identified by the key field. The fields with clear_only annotation can only be written with 0."
				},
				"tableEntryGet":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"This API is used to fetch data fields for the table entry identified by the key field."
				},
				"tableEntryGetFirst":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"This API is used to fetch the first entry in the pipe."
				},
				"tableEntryGetNext_n":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"This API is used to fetch the next n table entries in the pipe for the entry specified in the input."
				},
				"tableUsageGet":	{
					"target_attributes":	[],
					"description":	"This API is used to fetch the current usage of the table in terms of number of entries. As this table has fixed number of entries, it will always return a constant value based on what all possible values the key fields above can have."
				},
				"tableClear":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"This API is used to reset the R/W data fields for all the table entries to their default values (0 here)."
				}
			}
		}, {
			"name":	"tf1.tm.counter.pool",
			"description":	"This table is used to read or clear various counters for pools.",
			"id":	4278517828,
			"table_type":	"TmCounterPool",
			"size":	8,
			"key":	[{
					"id":	1,
					"name":	"pool",
					"description":	"The pool identifier string.",
					"repeated":	false,
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"string",
						"choices":	["IG_APP_POOL_0", "IG_APP_POOL_1", "IG_APP_POOL_2", "IG_APP_POOL_3", "EG_APP_POOL_0", "EG_APP_POOL_1", "EG_APP_POOL_2", "EG_APP_POOL_3"]
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	1,
						"name":	"usage_cells",
						"description":	"Pool usage count in terms of number of cells.",
						"repeated":	false,
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"watermark_cells",
						"description":	"Watermark value for pool in terms of number of cells.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryMod":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to modify the data fields for the table entry identified by the key field. The fields with clear_only annotation can only be written with 0."
				},
				"tableEntryGet":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch data fields for the table entry identified by the key field."
				},
				"tableEntryGetFirst":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the first entry identified by the pool in the list."
				},
				"tableEntryGetNext_n":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the next n table entries for the entry specified in the input."
				},
				"tableUsageGet":	{
					"target_attributes":	[],
					"description":	"This API is used to fetch the current usage of the table in terms of number of entries. As this table has fixed number of entries, it will always return a constant value based on what all possible values the key fields above can have."
				},
				"tableClear":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to reset the R/W data fields for all the table entries to their default values (0 here)."
				}
			}
		}, {
			"name":	"tf1.tm.counter.pipe",
			"description":	"This table is used to read or clear various pipe counters.",
			"id":	4278517829,
			"table_type":	"TmCounterPipe",
			"size":	1,
			"key":	[],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"total_buffer_full_drop_packets",
						"description":	"Number of packets which were dropped because of buffer full condition.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	2,
						"name":	"discard_queue_usage_cells",
						"description":	"Discard queue current usage in terms of number of cells.",
						"repeated":	false,
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"discard_queue_watermark_cells",
						"description":	"Watermark value for the discard queue in terms of number of cells.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	4,
						"name":	"total_cells",
						"description":	"Total number of cells received by the pipe.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	5,
						"name":	"total_packets",
						"description":	"Total number of packets received by the pipe.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	6,
						"name":	"uc_ct_packets",
						"description":	"Unicast cut through packet count through the pipe. The counter is incremented after packet is admitted into TM in egress direction.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	7,
						"name":	"mc_ct_packets",
						"description":	"Multicast cut through packet count through the pipe. The counter is incremented after packet is admitted into TM in egress direction.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	8,
						"name":	"ig_no_dest_drop_packets",
						"description":	"The number of packets which were dropped because of no destination on ingress side.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	9,
						"name":	"ig_buf_full_drop_packets",
						"description":	"The number of packets which were dropped because of buffer full condition on ingress side.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	10,
						"name":	"eg_total_drop_packets",
						"description":	"The total number of packets which were dropped on egress side.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	11,
						"name":	"mc_queue_drop_packets",
						"description":	"The total number of multicast packets dropped during queue admission control check.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	12,
						"name":	"mc_input_fifo_0_drop_packets",
						"description":	"The total number of multicast packets dropped at input FIFO 0.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	13,
						"name":	"mc_input_fifo_1_drop_packets",
						"description":	"The total number of multicast packets dropped at input FIFO 1.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	14,
						"name":	"mc_input_fifo_2_drop_packets",
						"description":	"The total number of multicast packets dropped at input FIFO 2.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	15,
						"name":	"mc_input_fifo_3_drop_packets",
						"description":	"The total number of multicast packets dropped at input FIFO 3.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableDefaultEntrySet":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"This API is used to modify the data fields for the pipe. The fields with clear_only annotation can only be written with 0."
				},
				"tableDefaultEntryReset":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"This API is used to reset the R/W data fields for the pipe to their initial values (0 here)."
				},
				"tableDefaultEntryGet":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"This API is used to fetch the data fields for the pipe."
				},
				"tableClear":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"This API is used to reset the R/W data fields for the pipe(s) their default values (0 here)."
				}
			}
		}, {
			"name":	"tf1.tm.counter.dpg",
			"description":	"This table is used to read or clear various counters for the Port Default Priority Group (DPG).",
			"id":	4278517830,
			"table_type":	"TmCounterPortDpg",
			"size":	288,
			"key":	[{
					"id":	1,
					"name":	"dev_port",
					"description":	"The device port ID (a 9-bit value, for example 189) used to refer to a traffic port on a Tofino based system. The dev-port is the port designation used in the Tofino fixed-function API calls and in P4 programming.",
					"repeated":	false,
					"annotations":	[{
							"name":	"$bfrt_port_type_class",
							"value":	"dev_port"
						}],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"drop_count_packets",
						"description":	"The drop count in terms of number of packets.",
						"repeated":	false,
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	2,
						"name":	"guaranteed_min_usage_cells",
						"description":	"The guaranteed minimum pool usage count in terms of number of cells.",
						"repeated":	false,
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	3,
						"name":	"shared_pool_usage_cells",
						"description":	"The shared pool usage count in terms of number of cells.",
						"repeated":	false,
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	4,
						"name":	"watermark_cells",
						"description":	"The watermark value in terms of number of cells.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryMod":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to modify the data fields for the table entry identified by the key field. The fields with clear_only annotation can only be written with 0."
				},
				"tableEntryGet":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch data fields for the table entry identified by the key field."
				},
				"tableEntryGetFirst":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the first table entry identified by the first device port identifier."
				},
				"tableEntryGetNext_n":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the next n table entries for the entry specified in the input."
				},
				"tableUsageGet":	{
					"target_attributes":	[],
					"description":	"This API is used to fetch the current usage of the table in terms of number of entries. As this table has fixed number of entries, it will always return a constant value based on what all possible values the key fields above can have."
				},
				"tableClear":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to reset the R/W data fields for all the table entries to their default values (0 here)."
				}
			}
		}, {
			"name":	"tf1.tm.counter.mirror_dpg",
			"description":	"This table is used to read or clear various counters associated with the default priority group for the mirror port.",
			"id":	4278517831,
			"table_type":	"TmCounterMirrorPortDpg",
			"size":	1,
			"key":	[],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"drop_count_packets",
						"description":	"The drop count in terms of number of packets.",
						"repeated":	false,
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	2,
						"name":	"guaranteed_min_usage_cells",
						"description":	"The guaranteed minimum pool usage count in terms of number of cells.",
						"repeated":	false,
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	3,
						"name":	"shared_pool_usage_cells",
						"description":	"The shared pool usage count in terms of number of cells.",
						"repeated":	false,
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	4,
						"name":	"watermark_cells",
						"description":	"The watermark value in terms of number of cells.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableDefaultEntrySet":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"This API is used to modify the data fields for the default priority group(s) for the mirror port(s) on the pipe(s). The fields with clear_only annotation can only be written with 0."
				},
				"tableDefaultEntryReset":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"This API is used to reset the R/W data fields for the default priority group(s) for the mirror port(s) on the pipe(s) to their initial values (0 here)."
				},
				"tableDefaultEntryGet":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"This API is used to fetch the data fields for the default priority group for the mirror port on the pipe."
				},
				"tableClear":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"This API is used to reset the R/W data fields for the default priority group(s) for the mirror port(s) on the pipe(s) to their default values (0 here)."
				}
			}
		}, {
			"name":	"tf1.tm.counter.ppg",
			"description":	"This table is used to read or clear various counters for the PFC priority groups associated to ports.",
			"id":	4278517832,
			"table_type":	"TmCounterPpg",
			"size":	128,
			"key":	[{
					"id":	1,
					"name":	"ppg_counter_id",
					"description":	"The PPG counter id from tm.ppg.cfg table. For each user assigned ppg id, there will be a counter id generated and can be looked up in tm.ppg.cfg table.",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint8"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	1,
						"name":	"ppg_id",
						"description":	"The user assigned ppg id. This can be used to reference an entry from tm.ppg.cfg table.",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"drop_count_packets",
						"description":	"The drop count in terms of number of packets.",
						"repeated":	false,
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	3,
						"name":	"guaranteed_min_usage_cells",
						"description":	"The guaranteed minimum pool usage count in terms of number of cells.",
						"repeated":	false,
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	4,
						"name":	"shared_pool_usage_cells",
						"description":	"The shared pool usage count in terms of number of cells.",
						"repeated":	false,
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	5,
						"name":	"skid_pool_usage_cells",
						"description":	"The skid pool usage count in terms of number of cells.",
						"repeated":	false,
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	6,
						"name":	"watermark_cells",
						"description":	"The watermark value in terms of number of cells.",
						"repeated":	false,
						"annotations":	[{
								"name":	"clear_only",
								"value":	"true"
							}],
						"type":	{
							"type":	"uint64"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryMod":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"This API is used to modify the data fields for the table entry identified by the key field. The fields with clear_only annotation can only be written with 0."
				},
				"tableEntryGet":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"This API is used to fetch data fields for the table entry identified by the key field."
				},
				"tableEntryGetFirst":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"This API is used to fetch the first table entry identified by the first counter identifier."
				},
				"tableEntryGetNext_n":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"This API is used to fetch the next n table entries for the entry specified in the input."
				},
				"tableUsageGet":	{
					"target_attributes":	[],
					"description":	"This API is used to fetch the current usage of the table in terms of number of entries. As this table has fixed number of entries, it will always return a constant value based on what all possible values the key fields above can have."
				},
				"tableClear":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"This API is used to reset the R/W data fields for all the table entries to their default values (0 here)."
				}
			}
		}, {
			"name":	"tf1.tm.cfg",
			"description":	"This table is read or write global TM configurations.",
			"id":	4278517889,
			"table_type":	"TmCfg",
			"size":	1,
			"key":	[],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"timestamp_shift_bits",
						"description":	"Number of global timestamp bits that is to be right shifted. Up to 16 bits can be right shifted. Anything greater than 16 is capped to 16.",
						"repeated":	false,
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	2,
						"name":	"cell_size_bytes",
						"description":	"The cell size in bytes.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	3,
						"name":	"total_cells",
						"description":	"Total Traffic Manager buffer capability measured in cell count.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableDefaultEntrySet":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to modify the R/W data fields for the global TM configuration."
				},
				"tableDefaultEntryReset":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to reset the R/W data fields for the global TM configuration to their initial reset values."
				},
				"tableDefaultEntryGet":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to fetch the data fields for the global TM configuration."
				},
				"tableClear":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to reset the R/W data fields for the global TM configuration to their initial reset values."
				}
			}
		}, {
			"name":	"tf1.tm.pipe.multicast_fifo",
			"description":	"This table is used to read or write various settings for multicast fifos for the pipes.",
			"id":	4278517841,
			"table_type":	"TmPipeMulticastFifo",
			"size":	1,
			"key":	[],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"icos_mask",
						"description":	"Multicast fifo to icos mapping.",
						"repeated":	true,
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"arbitration_mode",
						"description":	"Input fifo arbitration mode. Note that if strict priority is enabled on a FIFO, all FIFOs higher must also be enabled for strict priority. For example, to set FIFO 1 as strict priority, 2 and 3 must also be strict priority.",
						"repeated":	true,
						"type":	{
							"type":	"string",
							"choices":	["STRICT_PRIORITY", "WRR"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"wrr_weight",
						"description":	"Input fifo arbitration weight values used by the weighted round robin arbitration mode.",
						"repeated":	true,
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	4,
						"name":	"depth",
						"description":	"Input fifo depth (Sum of all four sizes cannot exceed 1024).",
						"repeated":	true,
						"type":	{
							"type":	"uint16"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableDefaultEntrySet":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"This API is used to modify the R/W data fields for the multicast fifos."
				},
				"tableDefaultEntryReset":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"This API is used to reset the R/W data fields for the multicast fifos to their initial reset values."
				},
				"tableDefaultEntryGet":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"This API is used to fetch the data fields for the multicast fifos."
				},
				"tableClear":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"This API is used to reset the R/W data fields for the multicast fifos to their initial reset values."
				}
			}
		}, {
			"name":	"tf1.tm.pipe.cfg",
			"description":	"TM Pipe general settings.",
			"id":	4278517840,
			"table_type":	"TmPipeCfg",
			"size":	4,
			"key":	[],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"mirror_drop_pg_id",
						"description":	"Port group of the Mirror Drop Port. Use it with mirror_drop_pg_queue a key to get the queue settings from TM Queue tables.",
						"repeated":	false,
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"mirror_drop_pg_queue",
						"description":	"Port group queue number of the Mirror Drop Queue which one is assigned to egress out negative mirror traffic on the Pipe. Use it with mirror_drop_pg_id as a key to get the queue settings from TM Queue tables.",
						"repeated":	false,
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	3,
						"name":	"mirror_drop_dev_port",
						"description":	"The device port on the same dev_tgt.pipe_id which one is assigned to egress out negative mirror traffic on the Pipe as a Mirror Drop Port. See also tm.port.cfg.mirror_drop_destination. The device port ID (a 9-bit value) to refer to a port on a Tofino based system; it is used for the Tofino fixed-function API calls and in P4 programming.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	4,
						"name":	"mirror_drop_queue_nr",
						"description":	"The device port queue number which one is assigned to egress out negative mirror traffic on the Pipe. See also tm.queue.cfg.mirror_drop_destination.",
						"repeated":	false,
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	5,
						"name":	"eg_limit_cells",
						"description":	"The egress pipe limit in number of buffer cells. When admitting a packet into the traffic manager, apart from the other checks, the packet also has to pass usage check on per egress pipe usage limit. When exceeded, the packet will not be admitted.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	6,
						"name":	"eg_hysteresis_cells",
						"description":	"The pipe level hysteresis limit in number buffer of cells. When usage of cells goes below the hysteresis limit, pipe level drop condition will be cleared.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableDefaultEntryGet":	{
					"description":	"Retrieves the entry identified by dev_tgt.pipe_id with values in the corresponding data fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableDefaultEntrySet":	{
					"description":	"Updates the entry identified by the dev_tgt.pipe_id with values from the corresponding data fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableDefaultEntryReset":	{
					"description":	"Updates the entry identified by the dev_tgt.pipe_id with HW reset values.",
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				},
				"tableClear":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"Applies tableDefaultEntryReset to the dev_tgt.pipe_id entry or to all pipes with PIPE_ALL."
				}
			}
		}, {
			"name":	"tf1.tm.pipe.sched_cfg",
			"description":	"TM Pipe Scheduler settings.",
			"id":	4278517842,
			"table_type":	"TmPipeSchedCfg",
			"size":	4,
			"key":	[],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"packet_ifg_compensation",
						"description":	"Per packet byte adjustment value. Set number of bytes added per each packet by shaper to adjust its length.",
						"repeated":	false,
						"type":	{
							"type":	"uint8"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableDefaultEntryGet":	{
					"description":	"Retrieves the entry identified by dev_tgt.pipe_id with values in the corresponding data fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableDefaultEntrySet":	{
					"description":	"Updates the entry identified by the dev_tgt.pipe_id with values from the corresponding data fields.",
					"target_attributes":	["dev_id", "pipe_id"]
				},
				"tableDefaultEntryReset":	{
					"description":	"Updates the entry identified by the dev_tgt.pipe_id with HW reset values.",
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				},
				"tableClear":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"],
					"description":	"Applies tableDefaultEntryReset to the dev_tgt.pipe_id entry or to all pipes with PIPE_ALL."
				}
			}
		}, {
			"name":	"tf1.snapshot.phv",
			"description":	"This table represents ingress PHV available values per stage.",
			"id":	4278648833,
			"table_type":	"SnapshotPhv",
			"size":	12,
			"key":	[{
					"id":	0,
					"name":	"stage",
					"description":	"The pipe stage.",
					"repeated":	false,
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	0,
						"name":	"phv0",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	1,
						"name":	"phv1",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	2,
						"name":	"phv2",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	3,
						"name":	"phv3",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	4,
						"name":	"phv4",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	5,
						"name":	"phv5",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	6,
						"name":	"phv6",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	7,
						"name":	"phv7",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	8,
						"name":	"phv8",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	9,
						"name":	"phv9",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	10,
						"name":	"phv10",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	11,
						"name":	"phv11",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	12,
						"name":	"phv12",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	13,
						"name":	"phv13",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	14,
						"name":	"phv14",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	15,
						"name":	"phv15",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	16,
						"name":	"phv16",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	17,
						"name":	"phv17",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	18,
						"name":	"phv18",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	19,
						"name":	"phv19",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	20,
						"name":	"phv20",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	21,
						"name":	"phv21",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	22,
						"name":	"phv22",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	23,
						"name":	"phv23",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	24,
						"name":	"phv24",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	25,
						"name":	"phv25",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	26,
						"name":	"phv26",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	27,
						"name":	"phv27",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	28,
						"name":	"phv28",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	29,
						"name":	"phv29",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	30,
						"name":	"phv30",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	31,
						"name":	"phv31",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	32,
						"name":	"phv32",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	33,
						"name":	"phv33",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	34,
						"name":	"phv34",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	35,
						"name":	"phv35",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	36,
						"name":	"phv36",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	37,
						"name":	"phv37",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	38,
						"name":	"phv38",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	39,
						"name":	"phv39",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	40,
						"name":	"phv40",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	41,
						"name":	"phv41",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	42,
						"name":	"phv42",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	43,
						"name":	"phv43",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	44,
						"name":	"phv44",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	45,
						"name":	"phv45",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	46,
						"name":	"phv46",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	47,
						"name":	"phv47",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	48,
						"name":	"phv48",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	49,
						"name":	"phv49",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	50,
						"name":	"phv50",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	51,
						"name":	"phv51",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	52,
						"name":	"phv52",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	53,
						"name":	"phv53",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	54,
						"name":	"phv54",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	55,
						"name":	"phv55",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	56,
						"name":	"phv56",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	57,
						"name":	"phv57",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	58,
						"name":	"phv58",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	59,
						"name":	"phv59",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	60,
						"name":	"phv60",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	61,
						"name":	"phv61",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	62,
						"name":	"phv62",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	63,
						"name":	"phv63",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	64,
						"name":	"phv64",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	65,
						"name":	"phv65",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	66,
						"name":	"phv66",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	67,
						"name":	"phv67",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	68,
						"name":	"phv68",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	69,
						"name":	"phv69",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	70,
						"name":	"phv70",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	71,
						"name":	"phv71",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	72,
						"name":	"phv72",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	73,
						"name":	"phv73",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	74,
						"name":	"phv74",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	75,
						"name":	"phv75",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	76,
						"name":	"phv76",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	77,
						"name":	"phv77",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	78,
						"name":	"phv78",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	79,
						"name":	"phv79",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	80,
						"name":	"phv80",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	81,
						"name":	"phv81",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	82,
						"name":	"phv82",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	83,
						"name":	"phv83",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	84,
						"name":	"phv84",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	85,
						"name":	"phv85",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	86,
						"name":	"phv86",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	87,
						"name":	"phv87",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	88,
						"name":	"phv88",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	89,
						"name":	"phv89",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	90,
						"name":	"phv90",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	91,
						"name":	"phv91",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	92,
						"name":	"phv92",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	93,
						"name":	"phv93",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	94,
						"name":	"phv94",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	95,
						"name":	"phv95",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	96,
						"name":	"phv96",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	97,
						"name":	"phv97",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	98,
						"name":	"phv98",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	99,
						"name":	"phv99",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	100,
						"name":	"phv100",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	101,
						"name":	"phv101",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	102,
						"name":	"phv102",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	103,
						"name":	"phv103",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	104,
						"name":	"phv104",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	105,
						"name":	"phv105",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	106,
						"name":	"phv106",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	107,
						"name":	"phv107",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	108,
						"name":	"phv108",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	109,
						"name":	"phv109",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	110,
						"name":	"phv110",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	111,
						"name":	"phv111",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	112,
						"name":	"phv112",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	113,
						"name":	"phv113",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	114,
						"name":	"phv114",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	115,
						"name":	"phv115",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	116,
						"name":	"phv116",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	117,
						"name":	"phv117",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	118,
						"name":	"phv118",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	119,
						"name":	"phv119",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	120,
						"name":	"phv120",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	121,
						"name":	"phv121",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	122,
						"name":	"phv122",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	123,
						"name":	"phv123",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	124,
						"name":	"phv124",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	125,
						"name":	"phv125",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	126,
						"name":	"phv126",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	127,
						"name":	"phv127",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	128,
						"name":	"phv128",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	129,
						"name":	"phv129",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	130,
						"name":	"phv130",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	131,
						"name":	"phv131",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	132,
						"name":	"phv132",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	133,
						"name":	"phv133",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	134,
						"name":	"phv134",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	135,
						"name":	"phv135",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	136,
						"name":	"phv136",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	137,
						"name":	"phv137",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	138,
						"name":	"phv138",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	139,
						"name":	"phv139",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	140,
						"name":	"phv140",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	141,
						"name":	"phv141",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	142,
						"name":	"phv142",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	143,
						"name":	"phv143",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	144,
						"name":	"phv144",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	145,
						"name":	"phv145",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	146,
						"name":	"phv146",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	147,
						"name":	"phv147",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	148,
						"name":	"phv148",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	149,
						"name":	"phv149",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	150,
						"name":	"phv150",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	151,
						"name":	"phv151",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	152,
						"name":	"phv152",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	153,
						"name":	"phv153",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	154,
						"name":	"phv154",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	155,
						"name":	"phv155",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	156,
						"name":	"phv156",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	157,
						"name":	"phv157",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	158,
						"name":	"phv158",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	159,
						"name":	"phv159",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	160,
						"name":	"phv160",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	161,
						"name":	"phv161",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	162,
						"name":	"phv162",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	163,
						"name":	"phv163",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	164,
						"name":	"phv164",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	165,
						"name":	"phv165",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	166,
						"name":	"phv166",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	167,
						"name":	"phv167",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	168,
						"name":	"phv168",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	169,
						"name":	"phv169",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	170,
						"name":	"phv170",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	171,
						"name":	"phv171",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	172,
						"name":	"phv172",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	173,
						"name":	"phv173",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	174,
						"name":	"phv174",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	175,
						"name":	"phv175",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	176,
						"name":	"phv176",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	177,
						"name":	"phv177",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	178,
						"name":	"phv178",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	179,
						"name":	"phv179",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	180,
						"name":	"phv180",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	181,
						"name":	"phv181",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	182,
						"name":	"phv182",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	183,
						"name":	"phv183",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	184,
						"name":	"phv184",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	185,
						"name":	"phv185",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	186,
						"name":	"phv186",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	187,
						"name":	"phv187",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	188,
						"name":	"phv188",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	189,
						"name":	"phv189",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	190,
						"name":	"phv190",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	191,
						"name":	"phv191",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	192,
						"name":	"phv192",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	193,
						"name":	"phv193",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	194,
						"name":	"phv194",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	195,
						"name":	"phv195",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	196,
						"name":	"phv196",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	197,
						"name":	"phv197",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	198,
						"name":	"phv198",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	199,
						"name":	"phv199",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	200,
						"name":	"phv200",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	201,
						"name":	"phv201",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	202,
						"name":	"phv202",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	203,
						"name":	"phv203",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	204,
						"name":	"phv204",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	205,
						"name":	"phv205",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	206,
						"name":	"phv206",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	207,
						"name":	"phv207",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	208,
						"name":	"phv208",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	209,
						"name":	"phv209",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	210,
						"name":	"phv210",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	211,
						"name":	"phv211",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	212,
						"name":	"phv212",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	213,
						"name":	"phv213",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	214,
						"name":	"phv214",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	215,
						"name":	"phv215",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	216,
						"name":	"phv216",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	217,
						"name":	"phv217",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	218,
						"name":	"phv218",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	219,
						"name":	"phv219",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	220,
						"name":	"phv220",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	221,
						"name":	"phv221",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	222,
						"name":	"phv222",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	223,
						"name":	"phv223",
						"description":	"Represents raw PHV value in the pipeline captured by snapshot.",
						"repeated":	false,
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryGet":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"This API retrieves an entry identified by a stage number for all PHV values present in the pipeline."
				},
				"tableEntryGetFirst":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"This API retrieves first valid entry in the table."
				},
				"tableEntryGetNext_n":	{
					"target_attributes":	["dev_id", "pipe_id"],
					"description":	"This API retrieves n valid entries from the table."
				},
				"tableUsageGet":	{
					"target_attributes":	[],
					"description":	"This API returns table size as this is fixed table."
				}
			}
		}, {
			"name":	"tf1.log_tbl_counter",
			"id":	4278648836,
			"table_type":	"LogDbgCnt",
			"size":	192,
			"depends_on":	[],
			"key":	[{
					"id":	1,
					"name":	"stage",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	false,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32",
						"default_value":	0
					}
				}, {
					"id":	2,
					"name":	"log_tbl",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	false,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32",
						"default_value":	0
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"type",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"string",
							"choices":	["DISABLED", "TBL_MISS", "TBL_HIT", "GW_TBL_MISS", "GW_TBL_HIT", "GW_TBL_INHIBIT", "UNUSED"],
							"default_value":	"TBL_HIT"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"value",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableEntryMod":	{
					"description":	"When called this function will ignore 'value' field value. When counter type is being changed it will always reset the counter value.",
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				},
				"tableEntryGet":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				},
				"tableEntryGetFirst":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				},
				"tableEntryGetNext_n":	{
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				},
				"tableClear":	{
					"description":	"When called this function will reset counter value to 0 for all tables, but it will not restore default counter type.",
					"target_attributes":	["dev_id", "pipe_id", "pipe_all"]
				},
				"tableUsageGet":	{
					"description":	"Returns table size.",
					"target_attributes":	["dev_id"]
				}
			}
		}, {
			"name":	"$mirror.cfg",
			"id":	4278452225,
			"table_type":	"MirrorCfg",
			"size":	1024,
			"key":	[{
					"id":	1,
					"name":	"$sid",
					"repeated":	false,
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint16"
					}
				}],
			"action_specs":	[{
					"id":	1,
					"name":	"$coalescing",
					"data":	[{
							"mandatory":	false,
							"read_only":	false,
							"singleton":	{
								"id":	1,
								"name":	"$internal_header",
								"repeated":	false,
								"annotations":	[],
								"type":	{
									"type":	"bytes",
									"width":	128
								}
							}
						}, {
							"mandatory":	false,
							"read_only":	false,
							"singleton":	{
								"id":	2,
								"name":	"$internal_header_length",
								"repeated":	false,
								"annotations":	[],
								"type":	{
									"type":	"uint32"
								}
							}
						}, {
							"mandatory":	false,
							"read_only":	false,
							"singleton":	{
								"id":	3,
								"name":	"$timeout_usec",
								"repeated":	false,
								"annotations":	[],
								"type":	{
									"type":	"uint32"
								}
							}
						}, {
							"mandatory":	false,
							"read_only":	false,
							"singleton":	{
								"id":	4,
								"name":	"$extract_len",
								"repeated":	false,
								"annotations":	[],
								"type":	{
									"type":	"uint32"
								}
							}
						}]
				}, {
					"id":	2,
					"name":	"$normal",
					"data":	[]
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	5,
						"name":	"$session_enable",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	6,
						"name":	"$direction",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"string",
							"choices":	["INGRESS", "EGRESS", "BOTH"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	7,
						"name":	"$ucast_egress_port",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	8,
						"name":	"$ucast_egress_port_valid",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	9,
						"name":	"$egress_port_queue",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	10,
						"name":	"$ingress_cos",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	11,
						"name":	"$packet_color",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"string",
							"choices":	["GREEN", "YELLOW", "RED"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	12,
						"name":	"$level1_mcast_hash",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	13,
						"name":	"$level2_mcast_hash",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	14,
						"name":	"$mcast_grp_a",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint16"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	15,
						"name":	"$mcast_grp_a_valid",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	16,
						"name":	"$mcast_grp_b",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint16"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	17,
						"name":	"$mcast_grp_b_valid",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	18,
						"name":	"$mcast_l1_xid",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint16"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	19,
						"name":	"$mcast_l2_xid",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint16"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	20,
						"name":	"$mcast_rid",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint16"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	21,
						"name":	"$icos_for_copy_to_cpu",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	22,
						"name":	"$copy_to_cpu",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	23,
						"name":	"$max_pkt_len",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint16"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[]
		}, {
			"name":	"tf1.dev.device_configuration",
			"id":	4278583297,
			"table_type":	"DevConfigure",
			"size":	1,
			"key":	[],
			"data":	[{
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	1,
						"name":	"sku",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"string",
							"choices":	["UNKNOWN", "BFN-T10-064Q", "BFN-T10-032Q", "BFN-T10-032D", "BFN-T10-032D-020", "BFN-T10-032D-018", "BFN-T10-032D-012"],
							"default_value":	"UNKNOWN"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	2,
						"name":	"num_pipes",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	3,
						"name":	"num_stages",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	4,
						"name":	"num_max_ports",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	5,
						"name":	"num_front_ports",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	6,
						"name":	"pcie_cpu_port",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	7,
						"name":	"eth_cpu_port_list",
						"repeated":	true,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	8,
						"name":	"internal_port_list",
						"repeated":	true,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	9,
						"name":	"external_port_list",
						"repeated":	true,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	10,
						"name":	"recirc_port_list",
						"repeated":	true,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	11,
						"name":	"intr_based_link_monitoring",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	12,
						"name":	"flow_learn_intr_mode",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool",
							"default_value":	false
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	13,
						"name":	"lrt_dr_timeout_usec",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	14,
						"name":	"flow_learn_timeout_usec",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32",
							"default_value":	500
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	15,
						"name":	"inactive_node_delete",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool",
							"default_value":	false
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	16,
						"name":	"selector_member_order",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool",
							"default_value":	false
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableDefaultEntrySet":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to set global device configuration."
				},
				"tableDefaultEntryGet":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to get global device configuration."
				},
				"tableDefaultEntryReset":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to reset writable datafields to default values."
				},
				"tableClear":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to reset writable datafields to default values."
				}
			}
		}, {
			"name":	"tf1.dev.warm_init",
			"id":	4278583298,
			"table_type":	"WarmInit",
			"size":	1,
			"key":	[],
			"action_specs":	[{
					"id":	1,
					"name":	"begin",
					"data":	[]
				}, {
					"id":	2,
					"name":	"completed",
					"data":	[]
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	1,
						"name":	"error",
						"description":	"The error state holder, action 'begin' needs to pass an empty object, so the action 'completed' could output the current warm-init status",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool",
							"default_value":	false
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"init_mode",
						"description":	"The warm init mode to use for this device",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"string",
							"choices":	["INIT_COLD", "WARM_INIT_FAST_RECFG", "WARM_INIT_HITLESS"],
							"default_value":	"INIT_COLD"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"upgrade_agents",
						"description":	"Flag to denote whether to upgrade the agents",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool",
							"default_value":	false
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	4,
						"name":	"p4_programs",
						"description":	"P4 programs configuration container settings",
						"repeated":	true,
						"annotations":	[],
						"container":	[{
								"mandatory":	false,
								"read_only":	false,
								"singleton":	{
									"id":	5,
									"name":	"p4_name",
									"description":	"Name of the P4 program to be set in the device_profile",
									"repeated":	false,
									"annotations":	[],
									"type":	{
										"type":	"string"
									}
								}
							}, {
								"mandatory":	false,
								"read_only":	false,
								"singleton":	{
									"id":	6,
									"name":	"p4_pipelines",
									"description":	"P4 pipeline configuration container settings",
									"repeated":	true,
									"annotations":	[],
									"container":	[{
											"id":	7,
											"name":	"runtime_context_file",
											"description":	"Path to the context.json file to be set in the device_profile",
											"mandatory":	false,
											"repeated":	false,
											"annotations":	[],
											"type":	{
												"type":	"string"
											}
										}, {
											"id":	8,
											"name":	"binary_path",
											"description":	"Path to the tofino.bin file to be set in the device_profile",
											"mandatory":	false,
											"repeated":	false,
											"annotations":	[],
											"type":	{
												"type":	"string"
											}
										}, {
											"id":	9,
											"name":	"pipeline_name",
											"description":	"Name of the pipeline to be set in the device_profile",
											"mandatory":	false,
											"repeated":	false,
											"annotations":	[],
											"type":	{
												"type":	"string"
											}
										}, {
											"id":	10,
											"name":	"pipe_scope",
											"description":	"List of pipes ids to be set in the device_profile",
											"mandatory":	false,
											"repeated":	true,
											"annotations":	[],
											"type":	{
												"type":	"uint32"
											}
										}]
								}
							}, {
								"id":	11,
								"name":	"bfrt_json_file",
								"description":	"Name or path of the bf-rt.json file to be set in the device_profile",
								"mandatory":	false,
								"repeated":	false,
								"annotations":	[],
								"type":	{
									"type":	"string"
								}
							}]
					}
				}],
			"supported_operations":	[],
			"attributes":	[],
			"supported_apis":	{
				"tableDefaultEntrySet":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to begin/completed warm_init procedure. \"pipe_id\" is not being used from the target because it is used as part of warm_init config instead."
				},
				"tableDefaultEntryGet":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to query warm_init arguments. \"pipe_id\" is not being used from the target because it is used as part of warm_init config instead."
				},
				"tableDefaultEntryReset":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to reset warm_init arguments. \"pipe_id\" is not being used from the target because it is used as part of warm_init config instead."
				},
				"tableClear":	{
					"target_attributes":	["dev_id"],
					"description":	"This API is used to clear warm_init arguments. \"pipe_id\" is not being used from the target because it is used as part of warm_init config instead."
				}
			}
		}, {
			"name":	"$PORT",
			"id":	4278255617,
			"table_type":	"PortConfigure",
			"size":	256,
			"key":	[{
					"id":	1,
					"name":	"$DEV_PORT",
					"repeated":	false,
					"annotations":	[{
							"name":	"$bfrt_port_type_class",
							"value":	"dev_port"
						}],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"$SPEED",
						"repeated":	false,
						"annotations":	[{
								"name":	"$bfrt_field_imp_level",
								"value":	"2"
							}],
						"type":	{
							"type":	"string",
							"choices":	["BF_SPEED_NONE", "BF_SPEED_1G", "BF_SPEED_10G", "BF_SPEED_25G", "BF_SPEED_40G", "BF_SPEED_40G_NB", "BF_SPEED_40G_NON_BREAKABLE", "BF_SPEED_50G", "BF_SPEED_100G", "BF_SPEED_200G", "BF_SPEED_400G"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"$FEC",
						"repeated":	false,
						"annotations":	[{
								"name":	"$bfrt_field_imp_level",
								"value":	"2"
							}],
						"type":	{
							"type":	"string",
							"choices":	["BF_FEC_TYP_NONE", "BF_FEC_TYP_FIRECODE", "BF_FEC_TYP_REED_SOLOMON", "BF_FEC_TYP_FC", "BF_FEC_TYP_RS"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"$N_LANES",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32",
							"default_value":	1
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	4,
						"name":	"$PORT_ENABLE",
						"repeated":	false,
						"annotations":	[{
								"name":	"$bfrt_field_imp_level",
								"value":	"2"
							}],
						"type":	{
							"type":	"bool",
							"default_value":	false
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	5,
						"name":	"$AUTO_NEGOTIATION",
						"repeated":	false,
						"annotations":	[{
								"name":	"$bfrt_field_imp_level",
								"value":	"2"
							}],
						"type":	{
							"type":	"string",
							"choices":	["PM_AN_DEFAULT", "PM_AN_FORCE_ENABLE", "PM_AN_FORCE_DISABLE"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	6,
						"name":	"$LOOPBACK_MODE",
						"repeated":	false,
						"annotations":	[{
								"name":	"$bfrt_field_imp_level",
								"value":	"2"
							}],
						"type":	{
							"type":	"string",
							"choices":	["BF_LPBK_NONE", "BF_LPBK_MAC_NEAR", "BF_LPBK_MAC_FAR", "BF_LPBK_PCS_NEAR", "BF_LPBK_SERDES_NEAR", "BF_LPBK_SERDES_FAR"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	7,
						"name":	"$TX_MTU",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32",
							"default_value":	10240
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	8,
						"name":	"$RX_MTU",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32",
							"default_value":	10240
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	9,
						"name":	"$TX_PFC_EN_MAP",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	10,
						"name":	"$RX_PFC_EN_MAP",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	11,
						"name":	"$TX_PAUSE_FRAME_EN",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool",
							"default_value":	false
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	12,
						"name":	"$RX_PAUSE_FRAME_EN",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool",
							"default_value":	false
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	13,
						"name":	"$CUT_THROUGH_EN",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool",
							"default_value":	false
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	14,
						"name":	"$PORT_DIR",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"string",
							"choices":	["PM_PORT_DIR_DEFAULT", "PM_PORT_DIR_TX_ONLY", "PM_PORT_DIR_RX_ONLY"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	15,
						"name":	"$MEDIA_TYPE",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"string",
							"choices":	["BF_MEDIA_TYPE_COPPER", "BF_MEDIA_TYPE_OPTICAL", "BF_MEDIA_TYPE_UNKNOWN"]
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	16,
						"name":	"$SDS_TX_ATTN",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	17,
						"name":	"$SDS_TX_PRE",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"int32",
							"default_value":	"0"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	18,
						"name":	"$SDS_TX_PRE2",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"int32",
							"default_value":	"0"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	19,
						"name":	"$SDS_TX_POST",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"int32",
							"default_value":	"0"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	20,
						"name":	"$SDS_TX_POST2",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"int32",
							"default_value":	"0"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	21,
						"name":	"$IS_VALID",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	22,
						"name":	"$IS_INTERNAL",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	23,
						"name":	"$CONN_ID",
						"repeated":	false,
						"annotations":	[{
								"name":	"$bfrt_port_type_class",
								"value":	"port_hdl_conn_id"
							}, {
								"name":	"$bfrt_field_imp_level",
								"value":	"2"
							}],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	24,
						"name":	"$CHNL_ID",
						"repeated":	false,
						"annotations":	[{
								"name":	"$bfrt_port_type_class",
								"value":	"port_hdl_chnl_id"
							}, {
								"name":	"$bfrt_field_imp_level",
								"value":	"2"
							}],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	25,
						"name":	"$PORT_UP",
						"repeated":	false,
						"annotations":	[{
								"name":	"$bfrt_field_imp_level",
								"value":	"2"
							}],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	26,
						"name":	"$PORT_NAME",
						"repeated":	false,
						"annotations":	[{
								"name":	"$bfrt_port_type_class",
								"value":	"port_name"
							}, {
								"name":	"$bfrt_field_imp_level",
								"value":	"2"
							}],
						"type":	{
							"type":	"string"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	27,
						"name":	"$RX_PRSR_PRI_THRESH",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	28,
						"name":	"$TIMESTAMP_1588_DELTA_TX",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint16"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	29,
						"name":	"$TIMESTAMP_1588_DELTA_RX",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint16"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	30,
						"name":	"$TIMESTAMP_1588_VALID",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	31,
						"name":	"$TIMESTAMP_1588_VALUE",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	32,
						"name":	"$TIMESTAMP_1588_ID",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	33,
						"name":	"$PLL_OVRCLK",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"float",
							"default_value":	0
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	["port_status_notif_cb"]
		}, {
			"name":	"$PORT_STAT",
			"id":	4278255618,
			"table_type":	"PortStat",
			"size":	256,
			"key":	[{
					"id":	1,
					"name":	"$DEV_PORT",
					"repeated":	false,
					"annotations":	[{
							"name":	"$bfrt_port_type_class",
							"value":	"dev_port"
						}],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"$FramesReceivedOK",
						"repeated":	false,
						"annotations":	[{
								"name":	"$bfrt_field_imp_level",
								"value":	"2"
							}],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"$FramesReceivedAll",
						"repeated":	false,
						"annotations":	[{
								"name":	"$bfrt_field_imp_level",
								"value":	"2"
							}],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"$FramesReceivedwithFCSError",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	4,
						"name":	"$FrameswithanyError",
						"repeated":	false,
						"annotations":	[{
								"name":	"$bfrt_field_imp_level",
								"value":	"2"
							}],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	5,
						"name":	"$OctetsReceivedinGoodFrames",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	6,
						"name":	"$OctetsReceived",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	7,
						"name":	"$FramesReceivedwithUnicastAddresses",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	8,
						"name":	"$FramesReceivedwithMulticastAddresses",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	9,
						"name":	"$FramesReceivedwithBroadcastAddresses",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	10,
						"name":	"$FramesReceivedoftypePAUSE",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	11,
						"name":	"$FramesReceivedwithLengthError",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	12,
						"name":	"$FramesReceivedUndersized",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	13,
						"name":	"$FramesReceivedOversized",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	14,
						"name":	"$FragmentsReceived",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	15,
						"name":	"$JabberReceived",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	16,
						"name":	"$PriorityPauseFrames",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	17,
						"name":	"$CRCErrorStomped",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	18,
						"name":	"$FrameTooLong",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	19,
						"name":	"$RxVLANFramesGood",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	20,
						"name":	"$FramesDroppedBufferFull",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	21,
						"name":	"$FramesReceivedLength_lt_64",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	22,
						"name":	"$FramesReceivedLength_eq_64",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	23,
						"name":	"$FramesReceivedLength_65_127",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	24,
						"name":	"$FramesReceivedLength_128_255",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	25,
						"name":	"$FramesReceivedLength_256_511",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	26,
						"name":	"$FramesReceivedLength_512_1023",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	27,
						"name":	"$FramesReceivedLength_1024_1518",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	28,
						"name":	"$FramesReceivedLength_1519_2047",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	29,
						"name":	"$FramesReceivedLength_2048_4095",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	30,
						"name":	"$FramesReceivedLength_4096_8191",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	31,
						"name":	"$FramesReceivedLength_8192_9215",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	32,
						"name":	"$FramesReceivedLength_9216",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	33,
						"name":	"$FramesTransmittedOK",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	34,
						"name":	"$FramesTransmittedAll",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	35,
						"name":	"$FramesTransmittedwithError",
						"repeated":	false,
						"annotations":	[{
								"name":	"$bfrt_field_imp_level",
								"value":	"2"
							}],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	36,
						"name":	"$OctetsTransmittedwithouterror",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	37,
						"name":	"$OctetsTransmittedTotal",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	38,
						"name":	"$FramesTransmittedUnicast",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	39,
						"name":	"$FramesTransmittedMulticast",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	40,
						"name":	"$FramesTransmittedBroadcast",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	41,
						"name":	"$FramesTransmittedPause",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	42,
						"name":	"$FramesTransmittedPriPause",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	43,
						"name":	"$FramesTransmittedVLAN",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	44,
						"name":	"$FramesTransmittedLength_lt_64",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	45,
						"name":	"$FramesTransmittedLength_eq_64",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	46,
						"name":	"$FramesTransmittedLength_65_127",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	47,
						"name":	"$FramesTransmittedLength_128_255",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	48,
						"name":	"$FramesTransmittedLength_256_511",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	49,
						"name":	"$FramesTransmittedLength_512_1023",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	50,
						"name":	"$FramesTransmittedLength_1024_1518",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	51,
						"name":	"$FramesTransmittedLength_1519_2047",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	52,
						"name":	"$FramesTransmittedLength_2048_4095",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	53,
						"name":	"$FramesTransmittedLength_4096_8191",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	54,
						"name":	"$FramesTransmittedLength_8192_9215",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	55,
						"name":	"$FramesTransmittedLength_9216",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	56,
						"name":	"$Pri0FramesTransmitted",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	57,
						"name":	"$Pri1FramesTransmitted",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	58,
						"name":	"$Pri2FramesTransmitted",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	59,
						"name":	"$Pri3FramesTransmitted",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	60,
						"name":	"$Pri4FramesTransmitted",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	61,
						"name":	"$Pri5FramesTransmitted",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	62,
						"name":	"$Pri6FramesTransmitted",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	63,
						"name":	"$Pri7FramesTransmitted",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	64,
						"name":	"$Pri0FramesReceived",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	65,
						"name":	"$Pri1FramesReceived",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	66,
						"name":	"$Pri2FramesReceived",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	67,
						"name":	"$Pri3FramesReceived",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	68,
						"name":	"$Pri4FramesReceived",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	69,
						"name":	"$Pri5FramesReceived",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	70,
						"name":	"$Pri6FramesReceived",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	71,
						"name":	"$Pri7FramesReceived",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	72,
						"name":	"$TransmitPri0Pause1USCount",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	73,
						"name":	"$TransmitPri1Pause1USCount",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	74,
						"name":	"$TransmitPri2Pause1USCount",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	75,
						"name":	"$TransmitPri3Pause1USCount",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	76,
						"name":	"$TransmitPri4Pause1USCount",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	77,
						"name":	"$TransmitPri5Pause1USCount",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	78,
						"name":	"$TransmitPri6Pause1USCount",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	79,
						"name":	"$TransmitPri7Pause1USCount",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	80,
						"name":	"$ReceivePri0Pause1USCount",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	81,
						"name":	"$ReceivePri1Pause1USCount",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	82,
						"name":	"$ReceivePri2Pause1USCount",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	83,
						"name":	"$ReceivePri3Pause1USCount",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	84,
						"name":	"$ReceivePri4Pause1USCount",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	85,
						"name":	"$ReceivePri5Pause1USCount",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	86,
						"name":	"$ReceivePri6Pause1USCount",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	87,
						"name":	"$ReceivePri7Pause1USCount",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	88,
						"name":	"$ReceiveStandardPause1USCount",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	89,
						"name":	"$FramesTruncated",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	90,
						"name":	"$TimeInSec",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	91,
						"name":	"$TimeinNSec",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	92,
						"name":	"$TX_PPS",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	93,
						"name":	"$RX_PPS",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	94,
						"name":	"$TX_RATE",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	95,
						"name":	"$RX_RATE",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint64",
							"default_value":	0
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	["poll_intvl_ms"]
		}, {
			"name":	"$PORT_HDL_INFO",
			"id":	4278255619,
			"table_type":	"PortHdlInfo",
			"size":	256,
			"key":	[{
					"id":	1,
					"name":	"$CONN_ID",
					"repeated":	false,
					"annotations":	[{
							"name":	"$bfrt_port_type_class",
							"value":	"port_hdl_conn_id"
						}],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32",
						"default_value":	0
					}
				}, {
					"id":	2,
					"name":	"$CHNL_ID",
					"repeated":	false,
					"annotations":	[{
							"name":	"$bfrt_port_type_class",
							"value":	"port_hdl_chnl_id"
						}],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32",
						"default_value":	0
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	1,
						"name":	"$DEV_PORT",
						"repeated":	false,
						"annotations":	[{
								"name":	"$bfrt_port_type_class",
								"value":	"dev_port"
							}],
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[]
		}, {
			"name":	"$PORT_FP_IDX_INFO",
			"id":	4278255620,
			"table_type":	"PortFpIdxInfo",
			"size":	256,
			"key":	[{
					"id":	1,
					"name":	"$FP_IDX",
					"repeated":	false,
					"annotations":	[{
							"name":	"$bfrt_port_type_class",
							"value":	"fp_port"
						}],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32",
						"default_value":	0
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	1,
						"name":	"$DEV_PORT",
						"repeated":	false,
						"annotations":	[{
								"name":	"$bfrt_port_type_class",
								"value":	"dev_port"
							}],
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[]
		}, {
			"name":	"$PORT_STR_INFO",
			"id":	4278255621,
			"table_type":	"PortStrInfo",
			"size":	256,
			"key":	[{
					"id":	1,
					"name":	"$PORT_NAME",
					"repeated":	false,
					"annotations":	[{
							"name":	"$bfrt_port_type_class",
							"value":	"port_name"
						}],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"string"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	true,
					"singleton":	{
						"id":	1,
						"name":	"$DEV_PORT",
						"repeated":	false,
						"annotations":	[{
								"name":	"$bfrt_port_type_class",
								"value":	"dev_port"
							}],
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[]
		}, {
			"name":	"$pre.mgid",
			"id":	4278321153,
			"table_type":	"PreMgid",
			"size":	65536,
			"key":	[{
					"id":	1,
					"name":	"$MGID",
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint16"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"$MULTICAST_NODE_ID",
						"repeated":	true,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"$MULTICAST_NODE_L1_XID_VALID",
						"repeated":	true,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"$MULTICAST_NODE_L1_XID",
						"repeated":	true,
						"annotations":	[],
						"type":	{
							"type":	"uint16"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	4,
						"name":	"$MULTICAST_ECMP_ID",
						"repeated":	true,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	5,
						"name":	"$MULTICAST_ECMP_L1_XID_VALID",
						"repeated":	true,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	6,
						"name":	"$MULTICAST_ECMP_L1_XID",
						"repeated":	true,
						"annotations":	[],
						"type":	{
							"type":	"uint16"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	["pre_device_config"]
		}, {
			"name":	"$pre.node",
			"id":	4278321154,
			"table_type":	"PreNode",
			"size":	16777216,
			"key":	[{
					"id":	1,
					"name":	"$MULTICAST_NODE_ID",
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}],
			"data":	[{
					"mandatory":	true,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"$MULTICAST_RID",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint16"
						}
					}
				}, {
					"mandatory":	true,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"$MULTICAST_LAG_ID",
						"repeated":	true,
						"annotations":	[],
						"type":	{
							"type":	"uint8"
						}
					}
				}, {
					"mandatory":	true,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"$DEV_PORT",
						"repeated":	true,
						"annotations":	[{
								"name":	"$bfrt_port_type_class",
								"value":	"dev_port"
							}],
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[]
		}, {
			"name":	"$pre.ecmp",
			"id":	4278321155,
			"table_type":	"PreEcmp",
			"size":	16777216,
			"key":	[{
					"id":	1,
					"name":	"$MULTICAST_ECMP_ID",
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}],
			"data":	[{
					"mandatory":	true,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"$MULTICAST_NODE_ID",
						"repeated":	true,
						"annotations":	[],
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[]
		}, {
			"name":	"$pre.lag",
			"id":	4278321156,
			"table_type":	"PreLag",
			"size":	255,
			"key":	[{
					"id":	1,
					"name":	"$MULTICAST_LAG_ID",
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint8"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"$DEV_PORT",
						"repeated":	true,
						"annotations":	[{
								"name":	"$bfrt_port_type_class",
								"value":	"dev_port"
							}],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"$MULTICAST_LAG_REMOTE_MSB_COUNT",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32",
							"default_value":	0
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"$MULTICAST_LAG_REMOTE_LSB_COUNT",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"uint32",
							"default_value":	0
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[]
		}, {
			"name":	"$pre.prune",
			"id":	4278321157,
			"table_type":	"PrePrune",
			"size":	288,
			"key":	[{
					"id":	1,
					"name":	"$MULTICAST_L2_XID",
					"annotations":	[],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint16"
					}
				}],
			"data":	[{
					"mandatory":	true,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"$DEV_PORT",
						"repeated":	true,
						"annotations":	[{
								"name":	"$bfrt_port_type_class",
								"value":	"dev_port"
							}],
						"type":	{
							"type":	"uint32"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[]
		}, {
			"name":	"$pre.port",
			"id":	4278321158,
			"table_type":	"PrePort",
			"size":	288,
			"key":	[{
					"id":	1,
					"name":	"$DEV_PORT",
					"annotations":	[{
							"name":	"$bfrt_port_type_class",
							"value":	"dev_port"
						}],
					"mandatory":	true,
					"match_type":	"Exact",
					"type":	{
						"type":	"uint32"
					}
				}],
			"data":	[{
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	1,
						"name":	"$MULTICAST_BACKUP_PORT",
						"repeated":	false,
						"annotations":	[{
								"name":	"$bfrt_port_type_class",
								"value":	"dev_port"
							}],
						"type":	{
							"type":	"uint32"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	2,
						"name":	"$MULTICAST_FORWARD_STATE",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	3,
						"name":	"$MULTICAST_CLEAR_FAST_FAILOVER",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}, {
					"mandatory":	false,
					"read_only":	false,
					"singleton":	{
						"id":	4,
						"name":	"$COPY_TO_CPU_PORT_ENABLE",
						"repeated":	false,
						"annotations":	[],
						"type":	{
							"type":	"bool"
						}
					}
				}],
			"supported_operations":	[],
			"attributes":	[]
		}]
}
